{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Trio d'Hommes Forts }Trio d'Hommes Forts}
{\comment G\'E9n\'E9r\'E9 par doxygen 1.9.6.}
{\creatim \yr2023\mo6\dy5\hr6\min18\sec28}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Trio d'Hommes Forts}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Lundi 5 Juin 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table des mati\'E8res\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Projet IOT/Microcontr\'F4leur Trio d'Hommes Forts.\par \pard\plain 
{\tc \v Projet IOT/Microcontr\'F4leur    Trio d'Hommes Forts.}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
 \par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Composition du Groupe
\par}
{\tc\tcl2 \v Composition du Groupe}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Guillaume PHAM\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Valentin CHORRO\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Nolan ZELPHATI\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Axel SEVENET\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mathieu MOUNIER\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Quentin COLETTA-CHAMBON\par}
\par
\par}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9partition des t\'E2ches
\par}
{\tc\tcl2 \v R\'E9partition des t\'E2ches}
Guillaume -> Responsable de la documentation et du Proof-reading; D\'E9veloppeur.\par
 Valentin -> Recherches en ligne ainsi que cr\'E9ation des graphiques utilis\'E9s.\par
 Nolan -> D\'E9veloppeur et Documentateur.\par
 Axel -> Responsable du D\'E9veloppement; Documentateur.\par
 Mathieu -> D\'E9veloppeur et Documentateur, architecture du syst\'E8me r\'E9seau.\par
 Quentin -> Cr\'E9ation des int\'E9ractions avec les diff\'E9rents protocoles utilis\'E9s (NTP, MQTT, OTA...)\par
\par}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lien de la vid\'E9o de Pr\'E9sentation : https://youtu.be/eu4oyuIV6d0
\par}
{\tc\tcl2 \v Lien de la vid\'E9o de Pr\'E9sentation : https://youtu.be/eu4oyuIV6d0}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Adafruit IO MQTT{\tc \v Adafruit IO MQTT}\par \pard\plain 
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gestion de la connexion au broker Adafruit IO et des donn\'E9es de t\'E9l\'E9m\'E9trie . Adafruit nous permet de recuperer les \'E9tats de sant\'E9 des utilisateurs et de les afficher sur une interface web.\par
{\b CTAdafruitIO.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Bluetooth Low Energy{\tc \v Bluetooth Low Energy}\par \pard\plain 
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTBLE est un module qui permet de scanner les appareils BLE \'E0 proximit\'E9 et d'interagir avec eux. Il pourra detecter et calculer la distance entre un esp et un autre. Il pourra aussi envoyer des informations \'E0 un esp \'E0 proximit\'E9.\par
{\b CTBLE.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Debug Contact Tracer{\tc \v Debug Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTDebug est un module qui permet d'activer ou de d\'E9sactiver les messages de debug. Lorsque MYDEBUG est d\'E9fini, les messages de debug sont affich\'E9s sur le port s\'E9rie.\par
{\b CTDebug.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
DHT11 Contact Tracer{\tc \v DHT11 Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTDHT est un module qui permet de r\'E9cup\'E9rer les donn\'E9es du capteur DHT11. Lorsque la temp\'E9rature exc\'E8de le seuil de temp\'E9rature ({\b temperature_threshold}), l'appareil est marqu\'E9 comme malade.\par
{\b CTDHT.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C9v\'E9nements de l'application Contact Tracer{\tc \v \'C9v\'E9nements de l'application Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTEvents est un module qui contient les callbacks des \'E9v\'E9nements de l'application. Il est possible d'ajouter des callbacks pour les \'E9v\'E9nements suivants :\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changement des identifiants de l'appareil ({\b onDeviceCredentialsChangedCallbacks})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changement des identifiants du r\'E9seau ({\b onNetworkCredentialsChangedCallbacks})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changement de la configuration de surveillance ({\b onMonitoringConfigChangedCallbacks})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Changement de l'\'E9tat de sant\'E9 ({\b onHealthStatusChangedCallbacks})\par}
\par
{\b CTEvents.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
LED d'indications Contact Tracer{\tc \v LED d'indications Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTLED est un module qui sert \'E0 g\'E9rer la LED de l'appareil. Lorsque l'Utilisateur est en bonne sant\'E9, la LED est allum\'E9e en permanence. Lorsque l'Utilisateur est en contact avec une personne malade, la LED fluctue en luminosit\'E9 de fa\'E7on sinusoidale. Lorsque l'Utilisateur est malade, la LED clignote.\par
{\b CTLED.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Contact Tracer Surveillance{\tc \v Contact Tracer Surveillance}\par \pard\plain 
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surveillance des Utilisateurs Contact Tracer (CT) \'E0 proximit\'E9. Lorsque deux utilisateurs CT sont \'E0 proximit\'E9, ils \'E9changent leurs adresses BT et se surveillent mutuellement. Si l'un des deux utilisateurs est malade ({\b user_status}), et que le temps d'int\'E9raction d\'E9passe le seuil de contact ({\b monitoring_time}) l'autre est notifi\'E9 et devient un cas contact.\par
{\b CTMonitoring.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
NTP Contact Tracer{\tc \v NTP Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTNTP est un module qui permet de r\'E9cup\'E9rer l'heure depuis un serveur NTP. Cette heure est utilis\'E9e pour l'horodatage des interactions avec d'autres appareils.\par
{\b CTNTP.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Over the Air Contact Tracer{\tc \v Over the Air Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTOTA est un module qui permet de g\'E9rer les mises \'E0 jour OTA et le debug \'E0 distance.\par
{\b CTOTA.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
SPIFFS Contact Tracer{\tc \v SPIFFS Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTSPIFFS est un module qui permet de d'int\'E9ragir avec la m\'E9moire flash SPIFFS du syst\'E8me. Il permet de lire et d'\'E9crire des fichiers JSON. Ce module contient des fonctions utilitaires de lecture et d'\'E9criture de fichiers JSON simples \'E0 utiliser. En utilisant ce module, il est possible de modifier les diff\'E9rentes variables globales syst\'E8me :\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b device_name} : Le nom de l'appareil\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b device_password} : Le mot de passe de l'appareil\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b net_ssid} : Le nom du r\'E9seau WiFi\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b net_password} : Le mot de passe du r\'E9seau WiFi\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b monitoring_time} : Le temps de surveillance\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b monitoring_distance} : La distance de surveillance\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b user_status} : L'\'E9tat de sant\'E9 de l'utilisateur\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b temperature_threshold} : Le seuil de temp\'E9rature\par}
\par
{\b CTSPIFFS.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Ticker Contact Tracer{\tc \v Ticker Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTTicker est un module qui contient une instance de Ticker pour l'ensemble du projet.\par
{\b CTTicker.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Portail Captif Contact Tracer{\tc \v Portail Captif Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTWebServer est un module qui contient la configuration du serveur web de l'application; son impl\'E9mentation ainsi que le syst\'E8me de Portail Captif. Le Portail Captif permet de configurer l'appareil en se connectant \'E0 son point d'acc\'E8s r\'E9seau.\par
{\b CTWebServer.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
WiFi Contact Tracer{\tc \v WiFi Contact Tracer}\par \pard\plain 
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTWiFI est un module qui contient la logique de connexion au r\'E9seau WiFi. Il permet de cr\'E9er un point d'acc\'E8s WiFi pour permettre \'E0 l'utilisateur de configurer l'appareil, ({\b Portail Captif Contact Tracer}) Ainsi que de se connecter \'E0 un r\'E9seau WiFi pour envoyer les donn\'E9es de t\'E9l\'E9m\'E9trie.\par
{\b CTWiFI.h} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Index hi\'E9rarchique\par \pard\plain 
{\tc \v Index hi\'E9rarchique}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hi\'E9rarchie des classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Cette liste d'h\'E9ritage est class\'E9e approximativement par ordre alphab\'E9tique :}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BLEAdvertisedDeviceCallbacks
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MyAdvertisedDeviceCallbacks\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Index des structures de donn\'E9es\par \pard\plain 
{\tc \v Index des structures de donn\'E9es}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Structures de donn\'E9es\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Liste des structures de donn\'E9es avec une br\'E8ve description :}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b MyAdvertisedDeviceCallbacks} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Index des fichiers\par \pard\plain 
{\tc \v Index des fichiers}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Liste des fichiers\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Liste de tous les fichiers avec une br\'E8ve description :}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CTAdafruitIO.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTBLE.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTDebug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTDHT.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTEvents.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTLED.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTMonitoring.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTNTP.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTOTA.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTSPIFFS.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTTicker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTWebServer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CTWiFi.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentation des structures de donn\'E9es{\tc \v Documentation des structures de donn\'E9es}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence de la classe MyAdvertisedDeviceCallbacks\par \pard\plain 
{\tc\tcl2 \v MyAdvertisedDeviceCallbacks}
{\xe \v MyAdvertisedDeviceCallbacks}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
{
{\f2 #include <CTBLE.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Description d\'E9taill\'E9e\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback quand un device BLE est d\'E9tect\'E9. Dans notre cas, on v\'E9rifie si son service UUID est celui que nous recherchons. Si c'est le cas, on r\'E9cup\'E8re son nom et le niveau de puissance (RSSI) qui nous permet de calculer une distance approximative On \'E9ffectue ensuite une interaction avec le device \par
}{
D\'E9finition \'E0 la ligne {\b 86} du fichier {\b CTBLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentation de cette classe a \'E9t\'E9 g\'E9n\'E9r\'E9e \'E0 partir du fichier suivant :{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CTBLE.h}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentation des fichiers{\tc \v Documentation des fichiers}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTAdafruitIO.h\par \pard\plain 
{\tc\tcl2 \v CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Adafruit_MQTT.h"}\par
{\f2 #include "Adafruit_MQTT_Client.h"}\par
{\f2 #include "CTTicker.h"}\par
{\f2 #include "CTBLE.h"}\par
{\f2 #include "CTMonitoring.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_SERVER}\~ "io.adafruit.com"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_SERVERPORT}\~ 1883\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_USERNAME}\~ "AxelSeven"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_KEY}\~ "aio_ABSF03axiYmBxXpX1rPa1FqKA1sF"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FEED_FREQ}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROCESS_PACKETS_MS}\~ 10000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FEED_HEALTH}\~ "/feeds/health"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b healthCallback} (char *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback de r\'E9ception des donn\'E9es de sant\'E9\par
Va mettre \'E0 jour le statut de l'utilisateur en fonction des donn\'E9es re\'E7ues. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b connectAdafruitIO} (int cycles=50)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connexion au broker Adafruit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envoi des donn\'E9es de t\'E9l\'E9m\'E9trie au broker Adafruit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupAdafruitIO} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loopAdafruitIO} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiClient {\b client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b uiSliderValue} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Adafruit_MQTT_Publish {\b healthPublish} = Adafruit_MQTT_Publish(&MyAdafruitMqtt, {\b IO_USERNAME} {\b FEED_HEALTH})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Adafruit_MQTT_Subscribe {\b health} = Adafruit_MQTT_Subscribe(&MyAdafruitMqtt, {\b IO_USERNAME} {\b FEED_HEALTH}, MQTT_QOS_1)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v FEED_FREQ\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:FEED_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FEED_FREQ\~ 10}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 25} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v FEED_HEALTH\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:FEED_HEALTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FEED_HEALTH\~ "/feeds/health"}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 28} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v IO_KEY\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:IO_KEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_KEY\~ "aio_ABSF03axiYmBxXpX1rPa1FqKA1sF"}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 23} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v IO_SERVER\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:IO_SERVER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_SERVER\~ "io.adafruit.com"}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 20} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v IO_SERVERPORT\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:IO_SERVERPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_SERVERPORT\~ 1883}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 21} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v IO_USERNAME\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:IO_USERNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_USERNAME\~ "AxelSeven"}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 22} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v PROCESS_PACKETS_MS\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:PROCESS_PACKETS_MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROCESS_PACKETS_MS\~ 10000}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 26} du fichier {\b CTAdafruitIO.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v connectAdafruitIO\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:connectAdafruitIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool connectAdafruitIO (int  {\i cycles} = {\f2 50})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connexion au broker Adafruit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{Nombre de tentatives de connexion \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 75} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v healthCallback\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:healthCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void healthCallback (char *  {\i data}, uint16_t  {\i len})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback de r\'E9ception des donn\'E9es de sant\'E9\par
Va mettre \'E0 jour le statut de l'utilisateur en fonction des donn\'E9es re\'E7ues. }}\par
{
D\'E9finition \'E0 la ligne {\b 48} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v loopAdafruitIO\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:loopAdafruitIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loopAdafruitIO ()}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boucle Adafruit IO{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
V\'E9rification de l'\'E9tat de la connexion\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Traitement des messages re\'E7us\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Maintien de la connexion en vie avec un Ping si on aucun publish t\'E9l\'E9m\'E9trie n'est fait \par}
}{
D\'E9finition \'E0 la ligne {\b 160} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v sendData\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:sendData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sendData ()}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envoi des donn\'E9es de t\'E9l\'E9m\'E9trie au broker Adafruit. }}\par
{
D\'E9finition \'E0 la ligne {\b 115} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v setupAdafruitIO\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:setupAdafruitIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupAdafruitIO ()}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration de la connexion au broker Adafruit IO{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Connexion WiFi\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Configuration de l'actuateur\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Configuration des callbacks \par}
}{
D\'E9finition \'E0 la ligne {\b 142} du fichier {\b CTAdafruitIO.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v client\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_MQTT_Client MyAdafruitMqtt & client}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 33} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v health\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:health}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_MQTT_Subscribe health = Adafruit_MQTT_Subscribe(&MyAdafruitMqtt, {\b IO_USERNAME} {\b FEED_HEALTH}, MQTT_QOS_1)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 40} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v healthPublish\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:healthPublish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_MQTT_Publish healthPublish = Adafruit_MQTT_Publish(&MyAdafruitMqtt, {\b IO_USERNAME} {\b FEED_HEALTH})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 39} du fichier {\b CTAdafruitIO.h}.}\par
}
{\xe \v uiSliderValue\:CTAdafruitIO.h}
{\xe \v CTAdafruitIO.h\:uiSliderValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t uiSliderValue =0}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 35} du fichier {\b CTAdafruitIO.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTAdafruitIO.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf21 #pragma once}\par
00011 \par
00012 {\cf21 #include "Adafruit_MQTT.h"}\par
00013 {\cf21 #include "Adafruit_MQTT_Client.h"}\par
00014 {\cf21 #include "CTTicker.h"}\par
00015 {\cf21 #include "CTBLE.h"}\par
00016 {\cf21 #include "CTMonitoring.h"}\par
00017 \par
00018 {\cf20 /************************* Configuration *************************************/}\par
00019 \par
00020 {\cf21 #define IO_SERVER         "io.adafruit.com"}\par
00021 {\cf21 #define IO_SERVERPORT     1883}\par
00022 {\cf21 #define IO_USERNAME       "AxelSeven"}\par
00023 {\cf21 #define IO_KEY            "aio_ABSF03axiYmBxXpX1rPa1FqKA1sF"}\par
00024 \par
00025 {\cf21 #define FEED_FREQ           10}\par
00026 {\cf21 #define PROCESS_PACKETS_MS  10000}\par
00027 \par
00028 {\cf21 #define FEED_HEALTH           "/feeds/health"}\par
00029 \par
00030 \par
00031 {\cf20 /************************** Variables ****************************************/}\par
00032 {\cf20 // Instanciation du client WiFi qui servira \'E0 se connecter au broker Adafruit}\par
00033 WiFiClient client;\par
00034 Adafruit_MQTT_Client MyAdafruitMqtt(&client, IO_SERVER, IO_SERVERPORT, IO_USERNAME, IO_KEY);\par
00035 uint32_t uiSliderValue=0;\par
00036 \par
00037 \par
00038 {\cf20 /****************************** Feeds ****************************************/}\par
00039 Adafruit_MQTT_Publish healthPublish = Adafruit_MQTT_Publish(&MyAdafruitMqtt, IO_USERNAME FEED_HEALTH);\par
00040 Adafruit_MQTT_Subscribe health = Adafruit_MQTT_Subscribe(&MyAdafruitMqtt, IO_USERNAME FEED_HEALTH, MQTT_QOS_1);\par
00041 \par
00042 \par
00043 \par
00048 {\cf18 void} healthCallback({\cf18 char} *data, uint16_t len)\{\par
00049 \par
00050 \par
00051   MYDEBUG_PRINT({\cf22 "-Adafruit : R\'E9ception des Donn\'E9es de Sant\'E9 Utilisateur : "});\par
00052   MYDEBUG_PRINTLN(data);\par
00053 \par
00054   {\cf18 char}* chars_array = strtok(data, {\cf22 "="});\par
00055   String address = String(chars_array);\par
00056 \par
00057   chars_array = strtok(NULL, {\cf22 "="});\par
00058   {\cf17 const} {\cf18 char}* status = chars_array;\par
00059 \par
00060   {\cf20 // Do nothing if the callback is from this device}\par
00061   {\cf19 if} ( String(BLEDevice::getAddress().toString().c_str()) == address ) \{\par
00062     {\cf19 return};\par
00063   \}\par
00064 \par
00065 \par
00066   update_device_status(address.c_str(), status);\par
00067 \par
00068 \}\par
00069 \par
00075 {\cf18 bool} connectAdafruitIO({\cf18 int} cycles = 50) \{\par
00076 \par
00077   {\cf19 if} (WiFi.status() != WL_CONNECTED) \{\par
00078     {\cf19 return} {\cf17 false};\par
00079   \}\par
00080 \par
00081   {\cf19 if} (MyAdafruitMqtt.connected()) \{\par
00082     {\cf19 return} {\cf17 true}; \par
00083   \}\par
00084 \par
00085   MYDEBUG_PRINT({\cf22 "-AdafruitIO : Connexion au broker"});\par
00086 \par
00087   int8_t ret = MyAdafruitMqtt.connect();\par
00088   {\cf19 if} (ret == 0) \{\par
00089     MYDEBUG_PRINTLN({\cf22 "\\n-AdafruitIO : Connect\'E9 au Broker."});\par
00090     {\cf19 return} {\cf17 true};\par
00091   \}\par
00092   {\cf20 // for (int i = 0; i < cycles; i++) \{}\par
00093 \par
00094   {\cf20 //   if ((ret = ) == 0) \{}\par
00095   {\cf20 //     MYDEBUG_PRINTLN("\\n-AdafruitIO : Connect\'E9 au Broker.");}\par
00096   {\cf20 //     return true;}\par
00097   {\cf20 //   \}}\par
00098   {\cf20 //   MYDEBUG_PRINT(".");}\par
00099   {\cf20 //   // delay(100);}\par
00100   {\cf20 // \}}\par
00101 \par
00102   MYDEBUG_PRINT({\cf22 "\\n-AdafruitIO : [ERREUR : "});\par
00103   MYDEBUG_PRINT(MyAdafruitMqtt.connectErrorString(ret));\par
00104   MYDEBUG_PRINT({\cf22 "] Impossible de se connecter au broker\\n"});\par
00105 \par
00106   MyAdafruitMqtt.disconnect();\par
00107 \par
00108   {\cf19 return} {\cf17 false};\par
00109 \}\par
00110 \par
00111 \par
00115 {\cf18 void} sendData()\{\par
00116   \par
00117   {\cf19 if} ( !connectAdafruitIO() ) \{\par
00118     {\cf19 return};\par
00119   \}\par
00120   \par
00121 \par
00122   {\cf18 char}* healthStatePublish;\par
00123   {\cf17 const} {\cf18 char}* address = BLEDevice::getAddress().toString().c_str();\par
00124   {\cf17 const} {\cf18 char}* statusDisplay = user_status == HEALTHY ? {\cf22 "HEALTHY"} : user_status == CONTACT ? {\cf22 "CONTACT"} : {\cf22 "SICK"};\par
00125   asprintf(&healthStatePublish, {\cf22 "%s=%s"}, address, statusDisplay);\par
00126 \par
00127   MYDEBUG_PRINT({\cf22 "-AdafruitIO TICKER : Envoi des donn\'E9es : "});\par
00128   MYDEBUG_PRINTLN(healthStatePublish);\par
00129   \par
00130   {\cf18 bool} healthPublishState = healthPublish.publish(healthStatePublish);\par
00131   {\cf19 if} ( !healthPublishState ) \{\par
00132     MYDEBUG_PRINTLN({\cf22 "-AdafruitIO : [ERREUR] Impossible d'envoyer les donn\'E9es de sant\'E9"});\par
00133   \}\par
00134 \}\par
00135 \par
00142 {\cf18 void} setupAdafruitIO() \{\par
00143 \par
00144   health.setCallback(healthCallback);\par
00145   MyAdafruitMqtt.subscribe(&health);\par
00146 \par
00147   AddHealthStatusChangedCallback([](HealthStatus status) \{\par
00148     sendData();\par
00149   \});\par
00150 \par
00151   myTicker.attach(FEED_FREQ, sendData);\par
00152 \}\par
00153 \par
00160 {\cf18 void} loopAdafruitIO() \{\par
00161   {\cf19 if} ( !MyAdafruitMqtt.connected() ) \{\par
00162     {\cf19 return}; \par
00163   \}\par
00164   \par
00165   MyAdafruitMqtt.processPackets(PROCESS_PACKETS_MS);\par
00166   {\cf19 if}( !MyAdafruitMqtt.ping() ) \{\par
00167     MyAdafruitMqtt.disconnect();\par
00168   \}\par
00169 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTBLE.h\par \pard\plain 
{\tc\tcl2 \v CTBLE.h}
{\xe \v CTBLE.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <BLEDevice.h>}\par
{\f2 #include <BLEUtils.h>}\par
{\f2 #include <BLEServer.h>}\par
{\f2 #include "CTMonitoring.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Structures de donn\'E9es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MyAdvertisedDeviceCallbacks}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERVICE_UUID}\~ "774320e9-e25a-455c-9230-b1758c4cfa12"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLE_FREQ}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLE_SCAN_TIME}\~ 5\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b start_BLE_server} (const char *{\b device_name})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D\'E9marrage du serveur BLE\par
On remet \'E0 z\'E9ro le serveur, le service et l'advertising. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BLEScan} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupBLEServer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupBLEClient} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loopBLEClient} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BLEScan} * {\b pBLEScan}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
BLEServer * {\b pServer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
BLEService * {\b pService}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
BLEAdvertising * {\b pAdvertising}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b BLE_last_scan}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
le temps de processeur du dernier scan }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v BLE_FREQ\:CTBLE.h}
{\xe \v CTBLE.h\:BLE_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLE_FREQ\~ 10}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 25} du fichier {\b CTBLE.h}.}\par
}
{\xe \v BLE_SCAN_TIME\:CTBLE.h}
{\xe \v CTBLE.h\:BLE_SCAN_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLE_SCAN_TIME\~ 5}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 26} du fichier {\b CTBLE.h}.}\par
}
{\xe \v SERVICE_UUID\:CTBLE.h}
{\xe \v CTBLE.h\:SERVICE_UUID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERVICE_UUID\~ "774320e9-e25a-455c-9230-b1758c4cfa12"}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 23} du fichier {\b CTBLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v BLEScan\:CTBLE.h}
{\xe \v CTBLE.h\:BLEScan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLEScan ()}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scan BLE{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
On lance le scan\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
On r\'E9cup\'E8re les r\'E9sultats\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
On vide les r\'E9sultats \par}
}{
D\'E9finition \'E0 la ligne {\b 124} du fichier {\b CTBLE.h}.}\par
}
{\xe \v loopBLEClient\:CTBLE.h}
{\xe \v CTBLE.h\:loopBLEClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loopBLEClient ()}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boucle du client BLE{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
On lance le scan \par}
}{
D\'E9finition \'E0 la ligne {\b 177} du fichier {\b CTBLE.h}.}\par
}
{\xe \v setupBLEClient\:CTBLE.h}
{\xe \v CTBLE.h\:setupBLEClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupBLEClient ()}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration du client BLE{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Initialisation de l'objet qui va scanner\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Association d'un callback\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Activation du scan \par}
}{
D\'E9finition \'E0 la ligne {\b 158} du fichier {\b CTBLE.h}.}\par
}
{\xe \v setupBLEServer\:CTBLE.h}
{\xe \v CTBLE.h\:setupBLEServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupBLEServer ()}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration du serveur BLE{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Initialisation du serveur\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Initialisation du service\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Initialisation de l'advertising \par}
}{
D\'E9finition \'E0 la ligne {\b 138} du fichier {\b CTBLE.h}.}\par
}
{\xe \v start_BLE_server\:CTBLE.h}
{\xe \v CTBLE.h\:start_BLE_server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void start_BLE_server (const char *  {\i device_name})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D\'E9marrage du serveur BLE\par
On remet \'E0 z\'E9ro le serveur, le service et l'advertising. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i device_name} \cell }{Nom du device BLE \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 49} du fichier {\b CTBLE.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v BLE_last_scan\:CTBLE.h}
{\xe \v CTBLE.h\:BLE_last_scan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long BLE_last_scan}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
le temps de processeur du dernier scan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
On utilise cette variable pour augmenter le temps d'interaction avec un device dans le fichier de monitoring \par
}}}{
D\'E9finition \'E0 la ligne {\b 41} du fichier {\b CTBLE.h}.}\par
}
{\xe \v pAdvertising\:CTBLE.h}
{\xe \v CTBLE.h\:pAdvertising}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BLEAdvertising* pAdvertising}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 33} du fichier {\b CTBLE.h}.}\par
}
{\xe \v pBLEScan\:CTBLE.h}
{\xe \v CTBLE.h\:pBLEScan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BLEScan}* pBLEScan}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 30} du fichier {\b CTBLE.h}.}\par
}
{\xe \v pServer\:CTBLE.h}
{\xe \v CTBLE.h\:pServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BLEServer* pServer}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 31} du fichier {\b CTBLE.h}.}\par
}
{\xe \v pService\:CTBLE.h}
{\xe \v CTBLE.h\:pService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BLEService* pService}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 32} du fichier {\b CTBLE.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTBLE.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 {\cf21 #pragma once}\par
00012 \par
00013 \par
00014 {\cf21 #include <BLEDevice.h>}\par
00015 {\cf21 #include <BLEUtils.h>}\par
00016 {\cf21 #include <BLEServer.h>}\par
00017 {\cf20 // #include <Ticker.h>}\par
00018 {\cf21 #include "CTMonitoring.h"}\par
00019 \par
00020 \par
00021 \par
00022 {\cf20 /************************* Configuration *************************************/}\par
00023 {\cf21 #define SERVICE_UUID     "774320e9-e25a-455c-9230-b1758c4cfa12"}\par
00024 \par
00025 {\cf21 #define BLE_FREQ         10}\par
00026 {\cf21 #define BLE_SCAN_TIME    5}\par
00027 \par
00028 \par
00029 {\cf20 /************************** Variables ****************************************/}\par
00030 BLEScan* pBLEScan;\par
00031 BLEServer* pServer;\par
00032 BLEService* pService;\par
00033 BLEAdvertising* pAdvertising;\par
00034 \par
00035 \par
00041 {\cf18 long} BLE_last_scan;\par
00042 \par
00049 {\cf18 void} start_BLE_server({\cf17 const} {\cf18 char}* device_name) \{\par
00050 \par
00051   MYDEBUG_PRINT({\cf22 "-BLE : D\'E9marrage du serveur sous le nom : "});\par
00052   MYDEBUG_PRINTLN(device_name);\par
00053 \par
00054   BLEDevice::init(device_name);\par
00055 \par
00056   {\cf20 // On remet \'E0 z\'E9ro le serveur, le service et l'advertising}\par
00057   {\cf19 if} (pServer) \{\par
00058     pServer->removeService(pService);\par
00059   \} {\cf19 else} \{\par
00060     pServer = BLEDevice::createServer();\par
00061   \}\par
00062 \par
00063   {\cf19 if} (pService) \{\par
00064     pService->stop();\par
00065   \}\par
00066   pService = pServer->createService(SERVICE_UUID);\par
00067   pService->start();\par
00068 \par
00069   {\cf19 if} (pAdvertising) \{\par
00070     pAdvertising->stop();\par
00071   \}\par
00072   pAdvertising = BLEDevice::getAdvertising();\par
00073   pAdvertising->addServiceUUID(SERVICE_UUID);\par
00074   pAdvertising->setScanResponse({\cf17 true});\par
00075 \par
00076   BLEDevice::startAdvertising();\par
00077 \}\par
00078 \par
00086 {\cf17 class }MyAdvertisedDeviceCallbacks: {\cf17 public} BLEAdvertisedDeviceCallbacks \{    \par
00087     {\cf18 void} onResult(BLEAdvertisedDevice advertisedDevice) \{\par
00088       {\cf19 if} (WiFi.status() != WL_CONNECTED) \{\par
00089         {\cf19 return};\par
00090       \}\par
00091 \par
00092       {\cf19 if} (SERVICE_UUID != advertisedDevice.getServiceUUID().toString()) \{\par
00093         {\cf19 return};\par
00094       \}\par
00095 \par
00096       std::string address = advertisedDevice.getAddress().toString();\par
00097       std::string name = advertisedDevice.getName();\par
00098       \par
00099       MYDEBUG_PRINT({\cf22 "-BLE client : CONTACT Tracer trouv\'E9 : "});\par
00100       MYDEBUG_PRINT(address.c_str());\par
00101       MYDEBUG_PRINT({\cf22 " | Nom : "});\par
00102       MYDEBUG_PRINTLN(name.c_str());\par
00103 \par
00104 \par
00105       {\cf18 float} ratio = (float)(-69 -advertisedDevice.getRSSI())/(10 * 2);\par
00106       {\cf18 float} distance = pow(10,ratio);\par
00107 \par
00108       {\cf20 // If the Contact Tracer is close enough, advance the "contact" timer.}\par
00109       {\cf19 if} (distance < monitoring_distance) \{\par
00110         \par
00111         device_interact(address.c_str(), name.c_str(), BLE_last_scan);\par
00112         BLE_last_scan = millis();\par
00113 \par
00114       \}\par
00115     \}\par
00116 \};\par
00117 \par
00124 {\cf18 void} BLEScan() \{\par
00125   BLEScanResults foundDevices = pBLEScan->start(BLE_SCAN_TIME, {\cf17 false});\par
00126   {\cf20 // MYDEBUG_PRINTLN(foundDevices.getCount());}\par
00127 \par
00128   pBLEScan->clearResults();\par
00129 \}\par
00130 \par
00131 \par
00138 {\cf18 void} setupBLEServer() \{\par
00139   MYDEBUG_PRINTLN({\cf22 "-BLE Server : D\'E9marrage"});\par
00140   {\cf20 // get_config();}\par
00141 \par
00142   start_BLE_server(device_name.c_str());\par
00143 \par
00144 \par
00145   {\cf20 // AddDeviceCredentialsChangedCallback([](const char* ssid, const char* password) \{}\par
00146   {\cf20 //   MYDEBUG_PRINTLN("-BLE Client : Nouveau SSID re\'E7u");}\par
00147   {\cf20 //   start_BLE_server(ssid);}\par
00148   {\cf20 // \});}\par
00149   MYDEBUG_PRINTLN({\cf22 "-BLE Server : D\'E9marr\'E9"});\par
00150 \}\par
00151 \par
00158 {\cf18 void} setupBLEClient() \{\par
00159   MYDEBUG_PRINTLN({\cf22 "-BLE Client : D\'E9marrage"});\par
00160 \par
00161   BLEDevice::init(device_name.c_str());\par
00162   pBLEScan = BLEDevice::getScan(); {\cf20 //create new scan}\par
00163   pBLEScan->setAdvertisedDeviceCallbacks({\cf17 new} MyAdvertisedDeviceCallbacks());\par
00164   pBLEScan->setActiveScan({\cf17 true}); {\cf20 //active scan uses more power, but get results faster}\par
00165   pBLEScan->setInterval(100);\par
00166   pBLEScan->setWindow(99);  {\cf20 // less or equal setInterval value}\par
00167 \par
00168   BLE_last_scan = millis();\par
00169 \par
00170   MYDEBUG_PRINTLN({\cf22 "-BLE Client : D\'E9marr\'E9"});\par
00171 \}\par
00172 \par
00177 {\cf18 void} loopBLEClient() \{\par
00178   BLEScan();\par
00179 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTDebug.h\par \pard\plain 
{\tc\tcl2 \v CTDebug.h}
{\xe \v CTDebug.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYDEBUG_PRINT}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYDEBUG_PRINTDEC}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYDEBUG_PRINTHEX}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYDEBUG_PRINTLN}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYDEBUG_PRINTF}(x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupDebug} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fonction qui permet d'initialiser le port s\'E9rie pour le debug. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v MYDEBUG_PRINT\:CTDebug.h}
{\xe \v CTDebug.h\:MYDEBUG_PRINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYDEBUG_PRINT( x)}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 17} du fichier {\b CTDebug.h}.}\par
}
{\xe \v MYDEBUG_PRINTDEC\:CTDebug.h}
{\xe \v CTDebug.h\:MYDEBUG_PRINTDEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYDEBUG_PRINTDEC( x)}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 18} du fichier {\b CTDebug.h}.}\par
}
{\xe \v MYDEBUG_PRINTF\:CTDebug.h}
{\xe \v CTDebug.h\:MYDEBUG_PRINTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYDEBUG_PRINTF( x)}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 21} du fichier {\b CTDebug.h}.}\par
}
{\xe \v MYDEBUG_PRINTHEX\:CTDebug.h}
{\xe \v CTDebug.h\:MYDEBUG_PRINTHEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYDEBUG_PRINTHEX( x)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 19} du fichier {\b CTDebug.h}.}\par
}
{\xe \v MYDEBUG_PRINTLN\:CTDebug.h}
{\xe \v CTDebug.h\:MYDEBUG_PRINTLN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYDEBUG_PRINTLN( x)}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 20} du fichier {\b CTDebug.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v setupDebug\:CTDebug.h}
{\xe \v CTDebug.h\:setupDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupDebug ()}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fonction qui permet d'initialiser le port s\'E9rie pour le debug. }}\par
{
D\'E9finition \'E0 la ligne {\b 27} du fichier {\b CTDebug.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTDebug.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf21 #ifdef MYDEBUG}\par
00011 {\cf21  #define MYDEBUG_PRINT(x)     Serial.print (x)}\par
00012 {\cf21  #define MYDEBUG_PRINTDEC(x)  Serial.print (x, DEC)}\par
00013 {\cf21  #define MYDEBUG_PRINTHEX(x)  Serial.print (x, HEX)}\par
00014 {\cf21  #define MYDEBUG_PRINTLN(x)   Serial.println (x)}\par
00015 {\cf21  #define MYDEBUG_PRINTF    Serial.printf}\par
00016 {\cf21 #else}\par
00017 {\cf21  #define MYDEBUG_PRINT(x)}\par
00018 {\cf21  #define MYDEBUG_PRINTDEC(x)}\par
00019 {\cf21  #define MYDEBUG_PRINTHEX(x)}\par
00020 {\cf21  #define MYDEBUG_PRINTLN(x)}\par
00021 {\cf21  #define MYDEBUG_PRINTF(x)}\par
00022 {\cf21 #endif}\par
00023 \par
00027 {\cf18 void} setupDebug()\{\par
00028 {\cf21 #ifdef MYDEBUG }\par
00029   Serial.begin(230400);\par
00030   Serial.println({\cf22 "Ouverture du port s\'E9rie"});\par
00031 {\cf21 #endif  }\par
00032 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTDHT.h\par \pard\plain 
{\tc\tcl2 \v CTDHT.h}
{\xe \v CTDHT.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <esp32DHT.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DHT_PIN}\~ 33\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DHT_TYPE}\~ DHT11\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupDhtSensor} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise le capteur DHT11. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DHT11 {\b CTDHT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b delayMS} = 5000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v DHT_PIN\:CTDHT.h}
{\xe \v CTDHT.h\:DHT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DHT_PIN\~ 33}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 12} du fichier {\b CTDHT.h}.}\par
}
{\xe \v DHT_TYPE\:CTDHT.h}
{\xe \v CTDHT.h\:DHT_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DHT_TYPE\~ DHT11}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 13} du fichier {\b CTDHT.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v setupDhtSensor\:CTDHT.h}
{\xe \v CTDHT.h\:setupDhtSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupDhtSensor ()}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise le capteur DHT11. }}\par
{
D\'E9finition \'E0 la ligne {\b 22} du fichier {\b CTDHT.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v CTDHT\:CTDHT.h}
{\xe \v CTDHT.h\:CTDHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DHT11 CTDHT}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 15} du fichier {\b CTDHT.h}.}\par
}
{\xe \v delayMS\:CTDHT.h}
{\xe \v CTDHT.h\:delayMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t delayMS = 5000}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 16} du fichier {\b CTDHT.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTDHT.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf21 #include <esp32DHT.h>}                     {\cf20 // https://github.com/bertmelis/esp32DHT}\par
00011 \par
00012 {\cf21 #define DHT_PIN    33}\par
00013 {\cf21 #define DHT_TYPE   DHT11}\par
00014 \par
00015 DHT11 CTDHT;\par
00016 uint32_t delayMS = 5000;\par
00017 \par
00018 \par
00022 {\cf18 void} setupDhtSensor() \{\par
00023   CTDHT.setup(DHT_PIN);\par
00024   CTDHT.onData([]({\cf18 float} temperature, {\cf18 float} humidity) \{\par
00025     MYDEBUG_PRINT({\cf22 "-DHT : ["});\par
00026     MYDEBUG_PRINT(temperature);\par
00027     MYDEBUG_PRINTLN({\cf22 "\'B0C] temp\'E9rature !"});\par
00028     MYDEBUG_PRINT({\cf22 "-DHT : ["});\par
00029     MYDEBUG_PRINT(humidity);\par
00030     MYDEBUG_PRINTLN({\cf22 "%] humidit\'E9 !"});\par
00031   \});\par
00032 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTEvents.h\par \pard\plain 
{\tc\tcl2 \v CTEvents.h}
{\xe \v CTEvents.h}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <stdio.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
D\'E9finitions de type\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b CredentialsCallback}) (const char *name, const char *password)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b MonitoringCallback}) (float time, float distance, float temperature)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b HealthCallback}) ({\b HealthStatus} status)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C9num\'E9rations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b HealthStatus} \{ {\b HEALTHY} = 2
, {\b CONTACT} = 1
, {\b SICK} = 0
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum\'E9ration des \'E9tats de sant\'E9 possibles. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddDeviceCredentialsChangedCallback} ({\b CredentialsCallback} callback)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InvokeDeviceCredentialsChangedCallbacks} (const char *name, const char *password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement des identifiants de l'appareil. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddNetworkCredentialsChangedCallback} ({\b CredentialsCallback} callback)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InvokeNetworkCredentialsChangedCallbacks} (const char *name, const char *password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement des identifiants du r\'E9seau. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddMonitoringConfigChangedCallback} ({\b MonitoringCallback} callback)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de la configuration de surveillance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InvokeMonitoringConfigChangedCallbacks} (float time, float distance, float temperature)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement de la configuration de surveillance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddHealthStatusChangedCallback} ({\b HealthCallback} callback)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de l'\'E9tat de sant\'E9. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InvokeHealthStatusChangedCallbacks} ({\b HealthStatus} status)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement de l'\'E9tat de sant\'E9. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b CredentialsCallback} > {\b onDeviceCredentialsChangedCallbacks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants de l'appareil. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b CredentialsCallback} > {\b onNetworkCredentialsChangedCallbacks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b MonitoringCallback} > {\b onMonitoringConfigChangedCallbacks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de la configuration de surveillance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b HealthCallback} > {\b onHealthStatusChangedCallbacks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de l'\'E9tat de sant\'E9. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des d\'E9finitions de type\par
\pard\plain 
{\xe \v CredentialsCallback\:CTEvents.h}
{\xe \v CTEvents.h\:CredentialsCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* CredentialsCallback) (const char *name, const char *password)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 32} du fichier {\b CTEvents.h}.}\par
}
{\xe \v HealthCallback\:CTEvents.h}
{\xe \v CTEvents.h\:HealthCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* HealthCallback) ({\b HealthStatus} status)}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 34} du fichier {\b CTEvents.h}.}\par
}
{\xe \v MonitoringCallback\:CTEvents.h}
{\xe \v CTEvents.h\:MonitoringCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* MonitoringCallback) (float time, float distance, float temperature)}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 33} du fichier {\b CTEvents.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation du type de l'\'E9num\'E9ration\par
\pard\plain 
{\xe \v HealthStatus\:CTEvents.h}
{\xe \v CTEvents.h\:HealthStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b HealthStatus}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum\'E9ration des \'E9tats de sant\'E9 possibles. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEALTHY : L'Utilisateur n'a pas \'E9t\'E9 en contact avec une personne malade.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CONTACT : L'Utilisateur a \'E9t\'E9 en contact avec une personne malade.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SICK : L'Utilisateur est malade. \par}
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs \'E9num\'E9r\'E9es:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HEALTHY\:CTEvents.h}
{\xe \v CTEvents.h\:HEALTHY}
{\qr HEALTHY{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{\cell }{\row }
{\xe \v CONTACT\:CTEvents.h}
{\xe \v CTEvents.h\:CONTACT}
{\qr CONTACT{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{\cell }{\row }
{\xe \v SICK\:CTEvents.h}
{\xe \v CTEvents.h\:SICK}
{\qr SICK{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{\cell }{\row }
}
\par
{
D\'E9finition \'E0 la ligne {\b 26} du fichier {\b CTEvents.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v AddDeviceCredentialsChangedCallback\:CTEvents.h}
{\xe \v CTEvents.h\:AddDeviceCredentialsChangedCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AddDeviceCredentialsChangedCallback ({\b CredentialsCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i callback} \cell }{Callback \'E0 ajouter. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 45} du fichier {\b CTEvents.h}.}\par
}
{\xe \v AddHealthStatusChangedCallback\:CTEvents.h}
{\xe \v CTEvents.h\:AddHealthStatusChangedCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AddHealthStatusChangedCallback ({\b HealthCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de l'\'E9tat de sant\'E9. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i callback} \cell }{Callback \'E0 ajouter. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 118} du fichier {\b CTEvents.h}.}\par
}
{\xe \v AddMonitoringConfigChangedCallback\:CTEvents.h}
{\xe \v CTEvents.h\:AddMonitoringConfigChangedCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AddMonitoringConfigChangedCallback ({\b MonitoringCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de la configuration de surveillance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i callback} \cell }{Callback \'E0 ajouter. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 93} du fichier {\b CTEvents.h}.}\par
}
{\xe \v AddNetworkCredentialsChangedCallback\:CTEvents.h}
{\xe \v CTEvents.h\:AddNetworkCredentialsChangedCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AddNetworkCredentialsChangedCallback ({\b CredentialsCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i callback} \cell }{Callback \'E0 ajouter. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 69} du fichier {\b CTEvents.h}.}\par
}
{\xe \v InvokeDeviceCredentialsChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:InvokeDeviceCredentialsChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InvokeDeviceCredentialsChangedCallbacks (const char *  {\i name}, const char *  {\i password})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement des identifiants de l'appareil. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{La valeur mise \'E0 jour du nom de l'appareil. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{La valeur mise \'E0 jour du mot de passe de l'appareil. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 54} du fichier {\b CTEvents.h}.}\par
}
{\xe \v InvokeHealthStatusChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:InvokeHealthStatusChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InvokeHealthStatusChangedCallbacks ({\b HealthStatus}  {\i status})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement de l'\'E9tat de sant\'E9. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i status} \cell }{Valeur mise \'E0 jour de l'\'E9tat de sant\'E9. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 126} du fichier {\b CTEvents.h}.}\par
}
{\xe \v InvokeMonitoringConfigChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:InvokeMonitoringConfigChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InvokeMonitoringConfigChangedCallbacks (float  {\i time}, float  {\i distance}, float  {\i temperature})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement de la configuration de surveillance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i time} \cell }{Valeur mise \'E0 jour de la dur\'E9e de surveillance. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i distance} \cell }{Valeur mise \'E0 jour de la distance de surveillance. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i temperature} \cell }{Valeur mise \'E0 jour de la temp\'E9rature Seuil de Maladie. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 103} du fichier {\b CTEvents.h}.}\par
}
{\xe \v InvokeNetworkCredentialsChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:InvokeNetworkCredentialsChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InvokeNetworkCredentialsChangedCallbacks (const char *  {\i name}, const char *  {\i password})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Appelle tous les callbacks enregistr\'E9s lors du changement des identifiants du r\'E9seau. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{La valeur mise \'E0 jour du nom du r\'E9seau (SSID). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{La valeur mise \'E0 jour du mot de passe du r\'E9seau. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 78} du fichier {\b CTEvents.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v onDeviceCredentialsChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:onDeviceCredentialsChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b CredentialsCallback}> onDeviceCredentialsChangedCallbacks}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants de l'appareil. }}\par
{
D\'E9finition \'E0 la ligne {\b 39} du fichier {\b CTEvents.h}.}\par
}
{\xe \v onHealthStatusChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:onHealthStatusChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b HealthCallback}> onHealthStatusChangedCallbacks}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de l'\'E9tat de sant\'E9. }}\par
{
D\'E9finition \'E0 la ligne {\b 112} du fichier {\b CTEvents.h}.}\par
}
{\xe \v onMonitoringConfigChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:onMonitoringConfigChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b MonitoringCallback}> onMonitoringConfigChangedCallbacks}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement de la configuration de surveillance. }}\par
{
D\'E9finition \'E0 la ligne {\b 87} du fichier {\b CTEvents.h}.}\par
}
{\xe \v onNetworkCredentialsChangedCallbacks\:CTEvents.h}
{\xe \v CTEvents.h\:onNetworkCredentialsChangedCallbacks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b CredentialsCallback}> onNetworkCredentialsChangedCallbacks}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callbacks appel\'E9s lors du changement des identifiants du r\'E9seau. }}\par
{
D\'E9finition \'E0 la ligne {\b 63} du fichier {\b CTEvents.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTEvents.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00014 {\cf21 #pragma once}\par
00015 \par
00016 {\cf21 #include <vector>}\par
00017 {\cf21 #include <stdio.h>}\par
00018 \par
00019 \par
00026 {\cf17 enum} HealthStatus \{\par
00027   HEALTHY = 2,\par
00028   CONTACT = 1,\par
00029   SICK = 0\par
00030 \};\par
00031 \par
00032 {\cf17 typedef} void(*CredentialsCallback)({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* password);\par
00033 {\cf17 typedef} void(*MonitoringCallback)({\cf18 float} time, {\cf18 float} distance, {\cf18 float} temperature);\par
00034 {\cf17 typedef} void(*HealthCallback)(HealthStatus status);\par
00035 \par
00039 std::vector<CredentialsCallback> onDeviceCredentialsChangedCallbacks;\par
00045 {\cf18 void} AddDeviceCredentialsChangedCallback(CredentialsCallback callback) \{\par
00046     onDeviceCredentialsChangedCallbacks.push_back(callback);\par
00047 \}\par
00054 {\cf18 void} InvokeDeviceCredentialsChangedCallbacks({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* password) \{\par
00055     {\cf19 for} ({\cf17 auto} callback : onDeviceCredentialsChangedCallbacks) \{\par
00056         callback(name, password);\par
00057     \}\par
00058 \}\par
00059 \par
00063 std::vector<CredentialsCallback> onNetworkCredentialsChangedCallbacks;\par
00069 {\cf18 void} AddNetworkCredentialsChangedCallback(CredentialsCallback callback) \{\par
00070     onNetworkCredentialsChangedCallbacks.push_back(callback);\par
00071 \}\par
00078 {\cf18 void} InvokeNetworkCredentialsChangedCallbacks({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* password) \{\par
00079     {\cf19 for} ({\cf17 auto} callback : onNetworkCredentialsChangedCallbacks) \{\par
00080         callback(name, password);\par
00081     \}\par
00082 \}\par
00083 \par
00087 std::vector<MonitoringCallback> onMonitoringConfigChangedCallbacks;\par
00093 {\cf18 void} AddMonitoringConfigChangedCallback(MonitoringCallback callback) \{\par
00094     onMonitoringConfigChangedCallbacks.push_back(callback);\par
00095 \}\par
00103 {\cf18 void} InvokeMonitoringConfigChangedCallbacks({\cf18 float} time, {\cf18 float} distance, {\cf18 float} temperature) \{\par
00104     {\cf19 for} ({\cf17 auto} callback : onMonitoringConfigChangedCallbacks) \{\par
00105         callback(time, distance, temperature);\par
00106     \}\par
00107 \}\par
00108 \par
00112 std::vector<HealthCallback> onHealthStatusChangedCallbacks;\par
00118 {\cf18 void} AddHealthStatusChangedCallback(HealthCallback callback) \{\par
00119     onHealthStatusChangedCallbacks.push_back(callback);\par
00120 \}\par
00126 {\cf18 void} InvokeHealthStatusChangedCallbacks(HealthStatus status) \{\par
00127     {\cf19 for} ({\cf17 auto} callback : onHealthStatusChangedCallbacks) \{\par
00128         callback(status);\par
00129     \}\par
00130 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTLED.h\par \pard\plain 
{\tc\tcl2 \v CTLED.h}
{\xe \v CTLED.h}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LED_PIN}\~ 23\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupLED} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise la LED. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateLED} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Met \'E0 jour la LED en fonction de l'\'E9tat de sant\'E9 de l'Utilisateur. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b PWMRANGE} = 256\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_power} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b crescendo} = true\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v LED_PIN\:CTLED.h}
{\xe \v CTLED.h\:LED_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LED_PIN\~ 23}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 12} du fichier {\b CTLED.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v setupLED\:CTLED.h}
{\xe \v CTLED.h\:setupLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupLED ()}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise la LED. }}\par
{
D\'E9finition \'E0 la ligne {\b 22} du fichier {\b CTLED.h}.}\par
}
{\xe \v updateLED\:CTLED.h}
{\xe \v CTLED.h\:updateLED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateLED ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Met \'E0 jour la LED en fonction de l'\'E9tat de sant\'E9 de l'Utilisateur. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HEALTHY : La LED est allum\'E9e en permanence.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CONTACT : La LED fluctue en luminosit\'E9 de fa\'E7on sinusoidale.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SICK : La LED clignote. \par}
}{
D\'E9finition \'E0 la ligne {\b 32} du fichier {\b CTLED.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v crescendo\:CTLED.h}
{\xe \v CTLED.h\:crescendo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool crescendo = true}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 17} du fichier {\b CTLED.h}.}\par
}
{\xe \v current_power\:CTLED.h}
{\xe \v CTLED.h\:current_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int current_power = 0}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 16} du fichier {\b CTLED.h}.}\par
}
{\xe \v PWMRANGE\:CTLED.h}
{\xe \v CTLED.h\:PWMRANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PWMRANGE = 256}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 14} du fichier {\b CTLED.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTLED.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 {\cf21 #define LED_PIN    23                  }{\cf20 // PIN + de la LED}\par
00013 \par
00014 {\cf18 int} PWMRANGE = 256;\par
00015 \par
00016 {\cf18 int} current_power = 0;\par
00017 {\cf18 bool} crescendo = {\cf17 true};\par
00018 \par
00022 {\cf18 void} setupLED() \{\par
00023   pinMode(LED_PIN, OUTPUT);\par
00024 \}\par
00025 \par
00032 {\cf18 void} updateLED() \{\par
00033 \par
00034   {\cf19 switch}(user_status) \{\par
00035     {\cf19 case} HEALTHY:\par
00036       current_power = HIGH;\par
00037       {\cf19 break};\par
00038     {\cf19 case} CONTACT:\par
00039       {\cf19 if} (current_power == 0 || current_power == PWMRANGE ) \{\par
00040         crescendo = !crescendo;\par
00041       \}\par
00042       current_power += crescendo ? 1 : -1;\par
00043       {\cf19 break};\par
00044     {\cf19 case} SICK:\par
00045       current_power = current_power == PWMRANGE ? 0 : PWMRANGE;\par
00046       {\cf19 break};\par
00047   \}\par
00048 \par
00049   digitalWrite(LED_PIN, current_power);\par
00050 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTMonitoring.h\par \pard\plain 
{\tc\tcl2 \v CTMonitoring.h}
{\xe \v CTMonitoring.h}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CTSPIFFS.h"}\par
{\f2 #include "CTNTP.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b become_contact_if_device_is_sick} (JsonDocument &monitoringDocument, File &monitoringFile, const char *otherDeviceAddress)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie si l'appareil est marqu\'E9 comme malade dans le fichier de monitoring et met \'E0 jour le status de l'utilisateur si c'est le cas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_device_status} (const char *address, const char *status)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Met \'E0 jour le status d'un appareil dans le fichier de monitoring. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b device_interact} (const char *address, const char *name, long last_contact)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Effectue une "interaction" avec un appareil, c'est \'E0 dire met \'E0 jour son nom, son temps d'exposition et son statut dans le fichier de surveillance\par
Si le temps d'exposition est sup\'E9rieur au seuil de surveillance, l'appareil est marqu\'E9 pour surveillance rapproch\'E9e. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v become_contact_if_device_is_sick\:CTMonitoring.h}
{\xe \v CTMonitoring.h\:become_contact_if_device_is_sick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void become_contact_if_device_is_sick (JsonDocument &  {\i monitoringDocument}, File &  {\i monitoringFile}, const char *  {\i otherDeviceAddress})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie si l'appareil est marqu\'E9 comme malade dans le fichier de monitoring et met \'E0 jour le status de l'utilisateur si c'est le cas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i monitoringDocument} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i monitoringFile} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i otherDeviceAddress} \cell }{\cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 23} du fichier {\b CTMonitoring.h}.}\par
}
{\xe \v device_interact\:CTMonitoring.h}
{\xe \v CTMonitoring.h\:device_interact}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void device_interact (const char *  {\i address}, const char *  {\i name}, long  {\i last_contact})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Effectue une "interaction" avec un appareil, c'est \'E0 dire met \'E0 jour son nom, son temps d'exposition et son statut dans le fichier de surveillance\par
Si le temps d'exposition est sup\'E9rieur au seuil de surveillance, l'appareil est marqu\'E9 pour surveillance rapproch\'E9e. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{L'adresse Bluetooth de l'appareil \'E0 mettre \'E0 jour \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Le nom de l'appareil \'E0 mettre \'E0 jour (uniquement visuel) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i last_contact} \cell }{Le temps de la derni\'E8re interaction avec l'appareil \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 66} du fichier {\b CTMonitoring.h}.}\par
}
{\xe \v update_device_status\:CTMonitoring.h}
{\xe \v CTMonitoring.h\:update_device_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_device_status (const char *  {\i address}, const char *  {\i status})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Met \'E0 jour le status d'un appareil dans le fichier de monitoring. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{L'adresse Bluetooth de l'appareil \'E0 mettre \'E0 jour \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i status} \cell }{Le nouveau status de l'appareil (Sain, Cas contact, Malade) \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 40} du fichier {\b CTMonitoring.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTMonitoring.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 {\cf21 #pragma once}\par
00012 \par
00013 {\cf21 #include "CTSPIFFS.h"}\par
00014 {\cf21 #include "CTNTP.h"}\par
00015 \par
00023 {\cf18 void} become_contact_if_device_is_sick(JsonDocument& monitoringDocument, File& monitoringFile, {\cf17 const} {\cf18 char}* otherDeviceAddress) \{\par
00024 \par
00025   {\cf20 // si le device est marqu\'E9 pour surveillance rapproch\'E9e et qu'il est malade, marquer l'utilisateur comme contact}\par
00026   {\cf19 if} ( monitoringDocument[otherDeviceAddress][{\cf22 "close_monitoring"}] == {\cf17 true} && monitoringDocument[otherDeviceAddress][{\cf22 "status"}] == {\cf22 "SICK"} && user_status == HEALTHY ) \{\par
00027     {\cf20 //TODO : envoyer un message \'E0 l'utilisateur pour lui dire qu'il est en contact avec un malade}\par
00028     update_health_status(CONTACT, monitoringDocument);\par
00029   \}\par
00030 \par
00031 \}\par
00032 \par
00040 {\cf18 void} update_device_status({\cf17 const} {\cf18 char}* address, {\cf17 const} {\cf18 char}* status) \{\par
00041     \par
00042   read_write_file(MONITORING_FILE_PATH, [=](JsonDocument& monitoringDocument, File& monitoringFile) \{\par
00043     {\cf17 auto} otherDevice = monitoringDocument[address];\par
00044 \par
00045     MYDEBUG_PRINT({\cf22 "-Appareil : Mis \'E0 jour le statut de "});\par
00046     MYDEBUG_PRINTLN(otherDevice.as<String>().c_str());\par
00047     MYDEBUG_PRINTLN(status);\par
00048 \par
00049     {\cf20 // mise \'E0 jour de l'\'E9tat du device dans le fichier de config}\par
00050     otherDevice[{\cf22 "status"}] = {\cf22 "TEST"};\par
00051 \par
00052     become_contact_if_device_is_sick(monitoringDocument, monitoringFile, address);\par
00053   \});\par
00054 \par
00055 \}\par
00056 \par
00066 {\cf18 void} device_interact({\cf17 const} {\cf18 char}* address, {\cf17 const} {\cf18 char}* name, {\cf18 long} last_contact) \{\par
00067   \par
00068   MYDEBUG_PRINT({\cf22 "-Appareil : Int\'E9ragi avec "});\par
00069   MYDEBUG_PRINTLN(name);\par
00070     \par
00071   read_write_file(MONITORING_FILE_PATH, [=](JsonDocument& monitoringDocument, File& monitoringFile) \{\par
00072     {\cf17 auto} otherDevice = monitoringDocument[address];\par
00073 \par
00074     {\cf20 // mettre \'E0 jour le nom du device \'E0 chaque interaction, car il peut changer}\par
00075     {\cf19 if} ( !otherDevice[{\cf22 "name"}].isNull() != 0 ) \{\par
00076       otherDevice[{\cf22 "name"}] = name;\par
00077     \}\par
00078 \par
00079     {\cf20 // si c'est la premi\'E8re fois qu'on rencontre le device, assigner le temps de premi\'E8re rencontre}\par
00080     {\cf17 auto} first_contact = otherDevice[{\cf22 "first_contact"}];\par
00081     {\cf19 if} ( first_contact.isNull() ) \{\par
00082       first_contact = getNTP();\par
00083     \}\par
00084 \par
00085     {\cf20 // mettre \'E0 jour le temps d'exposition}\par
00086     {\cf17 auto} total_exposure = otherDevice[{\cf22 "total_exposure"}];\par
00087     {\cf18 float} exposure_time = total_exposure.as<{\cf18 float}>();\par
00088     {\cf18 float} time_since_last_contact = (millis() - last_contact) / 1000.0;\par
00089 \par
00090     {\cf19 if} ( total_exposure.isNull() ) \{\par
00091       total_exposure = time_since_last_contact;\par
00092     \} {\cf19 else} \{\par
00093       total_exposure = exposure_time + time_since_last_contact;\par
00094     \}\par
00095     exposure_time = total_exposure.as<{\cf18 float}>();\par
00096 \par
00097     {\cf20 // marquer le device pour surveillance rapproch\'E9e si le temps d'exposition est sup\'E9rieur \'E0 la dur\'E9e de surveillance}\par
00098     if (exposure_time > ({\cf18 float})monitoring_time * 60) \{\par
00099       otherDevice[{\cf22 "close_monitoring"}] = {\cf17 true};\par
00100     \}\par
00101 \par
00102     become_contact_if_device_is_sick(monitoringDocument, monitoringFile, address);\par
00103 \par
00104   \});\par
00105 \par
00106 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTNTP.h\par \pard\plain 
{\tc\tcl2 \v CTNTP.h}
{\xe \v CTNTP.h}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <NTPClient.h>}\par
{\f2 #include <WiFiUdp.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NTPClient {\b timeClient} ({\b ntpUDP})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getNTP} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
R\'E9cup\'E8re l'heure depuis le serveur NTP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupNTP} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise le client NTP. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiUDP {\b ntpUDP}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v getNTP\:CTNTP.h}
{\xe \v CTNTP.h\:getNTP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String getNTP ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
R\'E9cup\'E8re l'heure depuis le serveur NTP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String L'heure au format HH:MM:SS. \par
}}}{
D\'E9finition \'E0 la ligne {\b 24} du fichier {\b CTNTP.h}.}\par
}
{\xe \v setupNTP\:CTNTP.h}
{\xe \v CTNTP.h\:setupNTP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupNTP ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialise le client NTP. }}\par
{
D\'E9finition \'E0 la ligne {\b 33} du fichier {\b CTNTP.h}.}\par
}
{\xe \v timeClient\:CTNTP.h}
{\xe \v CTNTP.h\:timeClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NTPClient timeClient ({\b ntpUDP} )}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v ntpUDP\:CTNTP.h}
{\xe \v CTNTP.h\:ntpUDP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiUDP ntpUDP}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 16} du fichier {\b CTNTP.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTNTP.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf21 #pragma once}\par
00011 \par
00012 \par
00013 {\cf21 #include <NTPClient.h>}           {\cf20 //https://github.com/arduino-libraries/NTPClient}\par
00014 {\cf21 #include <WiFiUdp.h>}\par
00015 \par
00016 WiFiUDP ntpUDP;\par
00017 NTPClient timeClient(ntpUDP);\par
00018 \par
00024 String getNTP()\{\par
00025   timeClient.update();\par
00026   {\cf19 return} timeClient.getFormattedTime();\par
00027 \par
00028 \}\par
00029 \par
00033 {\cf18 void} setupNTP()\{\par
00034   {\cf20 // On a besoin d'une connexion \'E0 Internet !}\par
00035   {\cf20 // if (WiFi.status() != WL_CONNECTED)\{}\par
00036   {\cf20 //   setupWiFi();}\par
00037   {\cf20 // \}  }\par
00038   timeClient.begin();\par
00039   {\cf20 // Nous avons 1h de d\'E9calage avec le m\'E9ridien de Greenwich (Greenwich Meridian Time : GMT).}\par
00040   timeClient.setTimeOffset(3600);\par
00041 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTOTA.h\par \pard\plain 
{\tc\tcl2 \v CTOTA.h}
{\xe \v CTOTA.h}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ArduinoOTA.h>}\par
{\f2 #include "CTTicker.h"}\par
{\f2 #include "CTSPIFFS.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b start_OTA} (const char *hostname, const char *password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D\'E9marre le service OTA avec les identifiants pass\'E9s en param\'E8tres. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupOTA} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loopOTA} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v loopOTA\:CTOTA.h}
{\xe \v CTOTA.h\:loopOTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loopOTA ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A chaque it\'E9ration, on verifie si une mise a jour nous est envoy\'E9e. Si tel est cas, la biblioth\'E8que ArduinoOTA se charge de tout ! \par
}{
D\'E9finition \'E0 la ligne {\b 88} du fichier {\b CTOTA.h}.}\par
}
{\xe \v setupOTA\:CTOTA.h}
{\xe \v CTOTA.h\:setupOTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupOTA ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration et d\'E9marrage des services OTA & Remote Debug \par
}{
D\'E9finition \'E0 la ligne {\b 53} du fichier {\b CTOTA.h}.}\par
}
{\xe \v start_OTA\:CTOTA.h}
{\xe \v CTOTA.h\:start_OTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void start_OTA (const char *  {\i hostname}, const char *  {\i password})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
D\'E9marre le service OTA avec les identifiants pass\'E9s en param\'E8tres. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hostname} \cell }{Le nom de l'appareil dans l'interface OTA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{Le mot de passe de l'appareil dans l'interface OTA \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 37} du fichier {\b CTOTA.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTOTA.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00009 {\cf21 #pragma once}\par
00010 \par
00011 {\cf21 #include <ArduinoOTA.h>}\par
00012 {\cf20 // #include <RemoteDebug.h>}\par
00013 {\cf21 #include "CTTicker.h"}\par
00014 {\cf21 #include "CTSPIFFS.h"}\par
00015 \par
00016 \par
00017 {\cf20 // RemoteDebug Debug;}\par
00018 {\cf20 // Ticker debugTicker;}\par
00019 \par
00020 {\cf20 // /**}\par
00021 {\cf20 //  * Fonction appel\'E9e par un ticker pour g\'E9n\'E9rer des messages de debug \'E0 diff\'E9rents niveaux}\par
00022 {\cf20 //  */}\par
00023 {\cf20 // void generateDebugLog()\{}\par
00024 {\cf20 //   rdebugVln("-Remote DEBUG : Message VERBOSE");}\par
00025 {\cf20 //   rdebugDln("-Remote DEBUG : Message DEBUG");}\par
00026 {\cf20 //   rdebugIln("-Remote DEBUG : Message INFO");}\par
00027 {\cf20 //   rdebugWln("-Remote DEBUG : Message WARNING");}\par
00028 {\cf20 //   rdebugEln("-Remote DEBUG : Message ERROR");}\par
00029 {\cf20 // \}}\par
00030 \par
00037 {\cf18 void} start_OTA({\cf17 const} {\cf18 char}* hostname, {\cf17 const} {\cf18 char}* password)\{\par
00038   {\cf19 if} (WiFi.status() != WL_CONNECTED) \{\par
00039     {\cf19 return};\par
00040   \}\par
00041 \par
00042   ArduinoOTA.setHostname(hostname);\par
00043   ArduinoOTA.setPassword(password);\par
00044   ArduinoOTA.begin();\par
00045 \par
00046   {\cf20 // Debug.begin(hostname);}\par
00047   {\cf20 // Debug.setPassword(password);}\par
00048 \}\par
00049 \par
00053 {\cf18 void} setupOTA()\{\par
00054   {\cf19 if} (WiFi.status() != WL_CONNECTED) \{\par
00055     {\cf19 return};\par
00056   \}\par
00057 \par
00058   read_file(CONFIG_FILE_PATH, [](JsonDocument& configDocument, File& configFile) \{\par
00059 \par
00060     String json_device_name = (configDocument[{\cf22 "device"}][{\cf22 "name"}]).as<String>();\par
00061     String json_device_password = (configDocument[{\cf22 "device"}][{\cf22 "password"}]).as<String>();\par
00062 \par
00063     start_OTA(json_device_name.c_str(), json_device_password.c_str());\par
00064 \par
00065   \});\par
00066 \par
00067   AddDeviceCredentialsChangedCallback([]({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* password) \{\par
00068     MYDEBUG_PRINTLN({\cf22 "OTA : Nouveaux identifiants re\'E7us"});\par
00069     start_OTA(name, password);\par
00070   \});\par
00071   \par
00072   {\cf20 // onDeviceCredentialsChanged += [](const char* ssid, const char* password) \{}\par
00073   {\cf20 //   MYDEBUG_PRINTLN("OTA : Nouveaux identifiants re\'E7us");}\par
00074   {\cf20 //   start_OTA(ssid, password);}\par
00075   {\cf20 // \};}\par
00076 \par
00077   {\cf20 // Debug.setResetCmdEnabled(true);}\par
00078   {\cf20 // Debug.showColors(true);}\par
00079   {\cf20 // Debug.setSerialEnabled(true);}\par
00080 \par
00081   {\cf20 // myTicker.attach(2, generateDebugLog);}\par
00082 \}\par
00083 \par
00088 {\cf18 void} loopOTA()\{\par
00089   ArduinoOTA.handle();\par
00090   {\cf20 // Debug.handle();}\par
00091 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTSPIFFS.h\par \pard\plain 
{\tc\tcl2 \v CTSPIFFS.h}
{\xe \v CTSPIFFS.h}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ArduinoJson.h>}\par
{\f2 #include "SPIFFS.h"}\par
{\f2 #include "CTEvents.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONFIG_FILE_PATH}\~ "/config.json"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MONITORING_FILE_PATH}\~ "/monitoring.json"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_PASSWORD}\~ "contacttracer"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_NET_SSID}\~ "Hamburger"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_NET_PASSWORD}\~ "YoLesKids"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_MONITORING_TIME}\~ 5.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_MONITORING_DISTANCE}\~ 5.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_TEMPERATURE_THRESHOLD}\~ 40.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_USER_STATUS}\~ "HEALTHY"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
D\'E9finitions de type\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef const std::function< void(JsonDocument &, File &)> {\b FileReadFunction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_file} (const char *fileName, {\b FileReadFunction} &readFunction)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire dans un fichier SPIFFS.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_write_file} (const char *fileName, {\b FileReadFunction} writeFunction)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire et \'E9crire dans un fichier SPIFFS.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_device_config} (const char *new_device_name, const char *new_device_password, JsonDocument &jsonDocument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire et \'E9crire dans un fichier SPIFFS.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_device_config} (const char *new_device_name, const char *new_device_password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe de la Contact Tracer, en tant que point d'acc\'E8s r\'E9seau, dont on se sert pour la configurer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_network_config} (const char *new_net_ssid, const char *new_net_password, JsonDocument &jsonDocument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe de la Contact Tracer, en tant que point d'acc\'E8s r\'E9seau, dont on se sert pour la configurer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_network_config} (const char *new_net_ssid, const char *new_net_password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe du point d'acc\'E8s r\'E9seau que va utiliser Le Contact Tracer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_monitoring_config} (float new_time, float new_distance, float new_temperature, JsonDocument &jsonDocument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour les variables de monitoring.\par
Les nouvelles variables sont stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_monitoring_config} (float new_time, float new_distance, float new_temperature)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour les variables de monitoring.\par
Les nouvelles variables sont stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_health_status} ({\b HealthStatus} new_health_status, JsonDocument &jsonDocument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le Status de Sant\'E9 de l'Utilisateur.\par
Le nouveau Status est stock\'E9 dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_health_status} ({\b HealthStatus} new_health_status)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le Status de Sant\'E9 de l'Utilisateur.\par
Le nouveau Status est stock\'E9 dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display_file} (const char *fileName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet d'afficher les contenus du fichier pass\'E9 en param\'E8tre de fa\'E7on formatt\'E9e.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_config} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de r\'E9cup\'E9rer les variables de configuration.\par
variables de configuration stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
Lors de l'appel de cette fonction, les variables globales sont mises \'E0 jour avec les valeurs pr\'E9sentes dans le fichier de configuration.\par
\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset_file} (const char *filePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de r\'E9initialiser le fichier de configuration.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupSPIFFS} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b device_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b device_password}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b net_ssid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b net_password}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HealthStatus} {\b user_status} = {\b HEALTHY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b monitoring_time} = 5.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b monitoring_distance} = 5.0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b temperature_threshold} = 40.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v CONFIG_FILE_PATH\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:CONFIG_FILE_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONFIG_FILE_PATH\~ "/config.json"}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 28} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_MONITORING_DISTANCE\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_MONITORING_DISTANCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_MONITORING_DISTANCE\~ 5.0}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 38} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_MONITORING_TIME\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_MONITORING_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_MONITORING_TIME\~ 5.0}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 37} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_NET_PASSWORD\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_NET_PASSWORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_NET_PASSWORD\~ "YoLesKids"}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 35} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_NET_SSID\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_NET_SSID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_NET_SSID\~ "Hamburger"}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 34} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_PASSWORD\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_PASSWORD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_PASSWORD\~ "contacttracer"}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 33} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_TEMPERATURE_THRESHOLD\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_TEMPERATURE_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_TEMPERATURE_THRESHOLD\~ 40.0}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 39} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v DEFAULT_USER_STATUS\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:DEFAULT_USER_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_USER_STATUS\~ "HEALTHY"}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 41} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v MONITORING_FILE_PATH\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:MONITORING_FILE_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MONITORING_FILE_PATH\~ "/monitoring.json"}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 29} du fichier {\b CTSPIFFS.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des d\'E9finitions de type\par
\pard\plain 
{\xe \v FileReadFunction\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:FileReadFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef const std::function<void(JsonDocument&, File&)> {\b FileReadFunction}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 45} du fichier {\b CTSPIFFS.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v display_file\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:display_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void display_file (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet d'afficher les contenus du fichier pass\'E9 en param\'E8tre de fa\'E7on formatt\'E9e.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction ouvre un document JSON. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avertissement\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
NE PAS UTILISER CETTE FONCTION AVEC UN DOCUMENT JSON DEJA OUVERT.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 385} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v get_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:get_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_config ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de r\'E9cup\'E9rer les variables de configuration.\par
variables de configuration stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
Lors de l'appel de cette fonction, les variables globales sont mises \'E0 jour avec les valeurs pr\'E9sentes dans le fichier de configuration.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le nom de la carte est alors stock\'E9 dans la variable {\b device_name};\par
le mot de Passe de la carte est stock\'E9 dans {\b device_password};\par
le SSID du r\'E9seau est stock\'E9 dans {\b net_ssid};\par
le mot de Passe du r\'E9seau est stock\'E9 dans {\b net_password};\par
le statut de l'utilisateur est stock\'E9 dans {\b user_status}. le temps de monitoring est stock\'E9 dans {\b monitoring_time}. la distance de monitoring est stock\'E9e dans {\b monitoring_distance}. \par
}{
D\'E9finition \'E0 la ligne {\b 409} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v read_file\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:read_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_file (const char *  {\i fileName}, {\b FileReadFunction} &  {\i readFunction})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire dans un fichier SPIFFS.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Le fichier est ouvert en mode lecture.\par
Les contenus du fichier sont pass\'E9s \'E0 la fonction readFunction sous forme de JsonDocument.\par
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i readFunction} \cell }{La fonction qui va lire dans le fichier de config. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 72} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v read_write_file\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:read_write_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_write_file (const char *  {\i fileName}, {\b FileReadFunction}  {\i writeFunction})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire et \'E9crire dans un fichier SPIFFS.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Le fichier est ouvert en mode lecture et \'E9criture.\par
Les contenus du fichier sont pass\'E9s \'E0 la fonction writeFunction sous forme de JsonDocument.\par
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{Le nom du fichier \'E0 lire et \'E9crire. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeFunction} \cell }{La fonction qui va \'E9crire dans le fichier de config. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 112} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v reset_file\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:reset_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reset_file (const char *  {\i filePath})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de r\'E9initialiser le fichier de configuration.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cette fonction supprime le fichier de configuration pr\'E9sent dans la m\'E9moire (SPIFFS) de la carte.\par
}{
D\'E9finition \'E0 la ligne {\b 492} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v setupSPIFFS\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:setupSPIFFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupSPIFFS ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration du syst\'E8me de fichiers SPIFFS{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Formatage du syst\'E8me de fichiers (OPTIONNEL)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Lecture du fichier de configuration \par}
}{
D\'E9finition \'E0 la ligne {\b 506} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_device_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_device_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_device_config (const char *  {\i new_device_name}, const char *  {\i new_device_password})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe de la Contact Tracer, en tant que point d'acc\'E8s r\'E9seau, dont on se sert pour la configurer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le SSID est alors stock\'E9 dans la variable {\b device_name};\par
et le mot de Passe dans {\b device_password}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction ouvre un document JSON. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avertissement\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
NE PAS UTILISER CETTE FONCTION AVEC UN DOCUMENT JSON DEJA OUVERT.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_name} \cell }{Le nouveau que la carte va utiliser pour son Access Point et son OTA. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_password} \cell }{Le nouveau mot de Passe que la carte va utiliser pour son Access Point et son OTA. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 186} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_device_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_device_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_device_config (const char *  {\i new_device_name}, const char *  {\i new_device_password}, JsonDocument &  {\i jsonDocument})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de lire et \'E9crire dans un fichier SPIFFS.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Le fichier est ouvert en mode lecture et \'E9criture.\par
Les contenus du fichier sont pass\'E9s \'E0 la fonction writeFunction sous forme de JsonDocument.\par
 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_name} \cell }{Le nouveau nom de l'appareil. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_password} \cell }{Le nouveau mot de passe de l'appareil. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i jsonDocument} \cell }{Le document JSON \'E0 \'E9crire dans le fichier de configuration. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 146} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_health_status\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_health_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_health_status ({\b HealthStatus}  {\i new_health_status})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le Status de Sant\'E9 de l'Utilisateur.\par
Le nouveau Status est stock\'E9 dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le Status de Sant\'E9 est alors stock\'E9 dans la variable {\b user_status}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction ouvre un document JSON. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avertissement\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
NE PAS UTILISER CETTE FONCTION AVEC UN DOCUMENT JSON DEJA OUVERT.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_health_status} \cell }{Le nouveau Status de Sant\'E9 de l'Utilisateur. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 366} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_health_status\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_health_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_health_status ({\b HealthStatus}  {\i new_health_status}, JsonDocument &  {\i jsonDocument})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le Status de Sant\'E9 de l'Utilisateur.\par
Le nouveau Status est stock\'E9 dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le Status de Sant\'E9 est alors stock\'E9 dans la variable {\b user_status}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction n'ouvre pas de document JSON, elle utilise celui pass\'E9 en param\'E8tre.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_health_status} \cell }{Le nouveau Status de Sant\'E9 de l'Utilisateur. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i jsonDocument} \cell }{Le document JSON qui contient les donn\'E9es de Surveillance. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 337} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_monitoring_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_monitoring_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_monitoring_config (float  {\i new_time}, float  {\i new_distance}, float  {\i new_temperature})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour les variables de monitoring.\par
Les nouvelles variables sont stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le temps de monitoring est alors stock\'E9 dans la variable {\b monitoring_time};\par
et la distance de monitoring dans {\b monitoring_distance}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction ouvre un document JSON. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avertissement\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
NE PAS UTILISER CETTE FONCTION AVEC UN DOCUMENT JSON DEJA OUVERT.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_time} \cell }{Le nouveau temps de monitoring. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_distance} \cell }{La nouvelle distance de monitoring. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 316} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_monitoring_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_monitoring_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_monitoring_config (float  {\i new_time}, float  {\i new_distance}, float  {\i new_temperature}, JsonDocument &  {\i jsonDocument})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour les variables de monitoring.\par
Les nouvelles variables sont stock\'E9es dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le temps de monitoring est alors stock\'E9 dans la variable {\b monitoring_time};\par
et la distance de monitoring dans {\b monitoring_distance}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction n'ouvre pas de document JSON, elle utilise celui pass\'E9 en param\'E8tre.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_time} \cell }{Le nouveau temps de monitoring. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_distance} \cell }{La nouvelle distance de monitoring. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i jsonDocument} \cell }{Le document JSON qui contient les donn\'E9es de Surveillance. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 269} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_network_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_network_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_network_config (const char *  {\i new_net_ssid}, const char *  {\i new_net_password})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe du point d'acc\'E8s r\'E9seau que va utiliser Le Contact Tracer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le SSID est alors stock\'E9 dans la variable {\b net_ssid};\par
et le mot de Passe dans {\b net_password}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction ouvre un document JSON. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avertissement\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
NE PAS UTILISER CETTE FONCTION AVEC UN DOCUMENT JSON DEJA OUVERT.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_net_ssid} \cell }{Le nouveau SSID r\'E9seau que la carte va utiliser. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_net_password} \cell }{Le nouveau mot de Passe r\'E9seau que la carte va utiliser \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 246} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v update_network_config\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:update_network_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_network_config (const char *  {\i new_net_ssid}, const char *  {\i new_net_password}, JsonDocument &  {\i jsonDocument})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permet de mettre \'E0 jour le SSID et le mot de Passe de la Contact Tracer, en tant que point d'acc\'E8s r\'E9seau, dont on se sert pour la configurer.\par
Les nouveaux identifiants sont stock\'E9s dans la m\'E9moire (SPIFFS) de la carte.\par
\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le SSID est alors stock\'E9 dans la variable {\b device_name};\par
et le mot de Passe dans {\b device_password}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction n'ouvre pas de document JSON, elle utilise celui pass\'E9 en param\'E8tre.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_name} \cell }{Le nouveau que la carte va utiliser pour son Access Point et son OTA. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_device_password} \cell }{Le nouveau mot de Passe que la carte va utiliser pour son Access Point et son OTA. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i jsonDocument} \cell }{Le document JSON qui contient la configuration R\'E9seau. \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 209} du fichier {\b CTSPIFFS.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v device_name\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:device_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String device_name}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 49} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v device_password\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:device_password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String device_password}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 50} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v monitoring_distance\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:monitoring_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float monitoring_distance = 5.0}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 59} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v monitoring_time\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:monitoring_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float monitoring_time = 5.0}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 58} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v net_password\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:net_password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String net_password}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 53} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v net_ssid\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:net_ssid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String net_ssid}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 52} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v temperature_threshold\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:temperature_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float temperature_threshold = 40.0}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 60} du fichier {\b CTSPIFFS.h}.}\par
}
{\xe \v user_status\:CTSPIFFS.h}
{\xe \v CTSPIFFS.h\:user_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HealthStatus} user_status = {\b HEALTHY}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 56} du fichier {\b CTSPIFFS.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTSPIFFS.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00020 {\cf21 #pragma once}\par
00021 \par
00022 \par
00023 {\cf21 #include <ArduinoJson.h>}   {\cf20 //Arduino JSON by Benoit Blanchon : https://github.com/bblanchon/ArduinoJson}\par
00024 {\cf21 #include "SPIFFS.h"}\par
00025 {\cf21 #include "CTEvents.h"}\par
00026 \par
00027 {\cf20 /*************************** Files ************************************/}\par
00028 {\cf21 #define CONFIG_FILE_PATH                "/config.json"}\par
00029 {\cf21 #define MONITORING_FILE_PATH            "/monitoring.json"}\par
00030 \par
00031 \par
00032 {\cf20 /*************************** Default Values ************************************/}\par
00033 {\cf21 #define DEFAULT_PASSWORD                "contacttracer"}\par
00034 {\cf21 #define DEFAULT_NET_SSID                "Hamburger"}\par
00035 {\cf21 #define DEFAULT_NET_PASSWORD            "YoLesKids"}\par
00036 \par
00037 {\cf21 #define DEFAULT_MONITORING_TIME         5.0}\par
00038 {\cf21 #define DEFAULT_MONITORING_DISTANCE     5.0}\par
00039 {\cf21 #define DEFAULT_TEMPERATURE_THRESHOLD   40.0}\par
00040 \par
00041 {\cf21 #define DEFAULT_USER_STATUS             "HEALTHY"}\par
00042 \par
00043 \par
00044 \par
00045 {\cf17 typedef} {\cf17 const} std::function<void(JsonDocument&, File&)> FileReadFunction;\par
00046 \par
00047 \par
00048 {\cf20 /*************************** Configuration Variables ************************************/}\par
00049 String device_name;\par
00050 String device_password;\par
00051 \par
00052 String net_ssid;\par
00053 String net_password;\par
00054 \par
00055 \par
00056 HealthStatus user_status = HEALTHY;\par
00057 \par
00058 {\cf18 float} monitoring_time = 5.0;\par
00059 {\cf18 float} monitoring_distance = 5.0;\par
00060 {\cf18 float} temperature_threshold = 40.0;\par
00061 \par
00062 \par
00063 \par
00072 {\cf18 void} read_file({\cf17 const} {\cf18 char}* fileName, FileReadFunction& readFunction) \{\par
00073   {\cf19 if} (!SPIFFS.begin({\cf17 true})) \{\par
00074     MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Impossible de monter le syst\'E8me de fichiers"});\par
00075     {\cf19 return};\par
00076   \}\par
00077 \par
00078   File jsonFile = SPIFFS.open(fileName, FILE_READ);\par
00079 \par
00080   {\cf19 if} ( !jsonFile ) \{\par
00081     MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Impossible d'ouvrir le fichier en mode lecture"});\par
00082     jsonFile.close();\par
00083     SPIFFS.end();\par
00084     {\cf19 return};\par
00085   \}\par
00086 \par
00087   DynamicJsonDocument jsonDocument(512);\par
00088   DeserializationError error = deserializeJson(jsonDocument, jsonFile);\par
00089 \par
00090   {\cf19 if} (error)\{\par
00091     MYDEBUG_PRINT({\cf22 "-SPIFFS : [ERREUR : "});\par
00092     MYDEBUG_PRINT(error.c_str());\par
00093     MYDEBUG_PRINT({\cf22 "] Impossible de parser le JSON dans le fichier : "});\par
00094     MYDEBUG_PRINTLN(jsonFile.name());\par
00095   \}\par
00096 \par
00097   readFunction(jsonDocument, jsonFile);\par
00098 \par
00099   jsonFile.close();\par
00100   SPIFFS.end();  \par
00101 \}\par
00102 \par
00112 {\cf18 void} read_write_file({\cf17 const} {\cf18 char}* fileName, FileReadFunction writeFunction) \{\par
00113     \par
00114   read_file(fileName, [fileName, writeFunction](JsonDocument& jsonDocument, File& jsonFile) \{\par
00115     jsonFile.close();\par
00116     jsonFile = SPIFFS.open(fileName, FILE_WRITE);\par
00117 \par
00118     {\cf19 if} ( !jsonFile ) \{\par
00119       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Impossible d'ouvrir le fichier en mode \'E9criture"});\par
00120       jsonFile.close();\par
00121       SPIFFS.end();\par
00122       {\cf19 return};\par
00123     \}\par
00124 \par
00125 \par
00126     writeFunction(jsonDocument, jsonFile); \par
00127     \par
00128 \par
00129     {\cf19 if} (serializeJson(jsonDocument, jsonFile) == 0) \{\par
00130       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Impossible d'\'E9crire le JSON dans le fichier de configuration"});\par
00131     \}\par
00132   \});\par
00133 \par
00134 \}\par
00135 \par
00146 {\cf18 void} update_device_config( {\cf17 const} {\cf18 char}* new_device_name, {\cf17 const} {\cf18 char}* new_device_password, JsonDocument& jsonDocument ) \{\par
00147 \par
00148   {\cf18 bool} deviceCredentialsChanged = {\cf17 false};\par
00149 \par
00150   {\cf19 if} ( strcmp(new_device_name, device_name.c_str()) != 0 ) \{\par
00151     deviceCredentialsChanged = {\cf17 true};\par
00152   \}\par
00153   device_name = String(new_device_name);\par
00154   jsonDocument[{\cf22 "device"}][{\cf22 "name"}] = device_name;\par
00155 \par
00156   {\cf19 if} ( strcmp(new_device_password, device_password.c_str()) != 0 ) \{\par
00157     deviceCredentialsChanged = {\cf17 true};\par
00158   \}\par
00159   device_password = String(new_device_password);\par
00160   jsonDocument[{\cf22 "device"}][{\cf22 "password"}] = device_password;\par
00161 \par
00162   {\cf19 if} ( deviceCredentialsChanged ) \{\par
00163     MYDEBUG_PRINT({\cf22 "Nouveau Nom d'appareil : "});\par
00164     MYDEBUG_PRINT(device_name);\par
00165     MYDEBUG_PRINT({\cf22 " | Nouveau Mot de Passe : "});\par
00166     MYDEBUG_PRINTLN(device_password);\par
00167     InvokeDeviceCredentialsChangedCallbacks(device_name.c_str(), device_password.c_str());\par
00168   \}\par
00169 \par
00170 \}\par
00171 \par
00172 \par
00186 {\cf18 void} update_device_config( {\cf17 const} {\cf18 char}* new_device_name, {\cf17 const} {\cf18 char}* new_device_password ) \{\par
00187 \par
00188   read_write_file(CONFIG_FILE_PATH, [&new_device_name, &new_device_password](JsonDocument& jsonDocument, File& jsonFile) \{\par
00189 \par
00190     update_device_config(new_device_name, new_device_password, jsonDocument);\par
00191 \par
00192   \});\par
00193 \par
00194 \}\par
00195 \par
00209 {\cf18 void} update_network_config( {\cf17 const} {\cf18 char}* new_net_ssid, {\cf17 const} {\cf18 char}* new_net_password, JsonDocument& jsonDocument ) \{\par
00210   {\cf18 bool} networkCredentialsChanged = {\cf17 false};\par
00211 \par
00212   {\cf19 if} ( strcmp(new_net_ssid, net_ssid.c_str()) != 0 ) \{\par
00213     networkCredentialsChanged = {\cf17 true};\par
00214   \}\par
00215   net_ssid = String(new_net_ssid);\par
00216   jsonDocument[{\cf22 "wifi"}][{\cf22 "net_ssid"}] = net_ssid;\par
00217 \par
00218   {\cf19 if} ( strcmp(new_net_password, net_ssid.c_str()) != 0 ) \{\par
00219     networkCredentialsChanged = {\cf17 true};\par
00220   \}\par
00221   net_password = String(new_net_password);\par
00222   jsonDocument[{\cf22 "wifi"}][{\cf22 "net_password"}] = net_password;\par
00223 \par
00224   {\cf19 if} ( networkCredentialsChanged ) \{\par
00225     MYDEBUG_PRINT({\cf22 "Nouveau SSID : "});\par
00226     MYDEBUG_PRINT(net_ssid);\par
00227     MYDEBUG_PRINT({\cf22 " | Nouveau Mot de Passe R\'E9seau : "});\par
00228     MYDEBUG_PRINTLN(net_password);\par
00229     InvokeNetworkCredentialsChangedCallbacks(net_ssid.c_str(), net_password.c_str());\par
00230   \}\par
00231 \}\par
00232 \par
00246 {\cf18 void} update_network_config( {\cf17 const} {\cf18 char}* new_net_ssid, {\cf17 const} {\cf18 char}* new_net_password ) \{\par
00247 \par
00248   read_write_file(CONFIG_FILE_PATH, [new_net_ssid, new_net_password](JsonDocument& jsonDocument, File& jsonFile) \{\par
00249 \par
00250     update_network_config(new_net_ssid, new_net_password, jsonDocument);\par
00251 \par
00252   \}); \par
00253 \par
00254 \}\par
00255 \par
00269 {\cf18 void} update_monitoring_config( {\cf18 float} new_time, {\cf18 float} new_distance, {\cf18 float} new_temperature, JsonDocument& jsonDocument ) \{\par
00270 \par
00271   {\cf18 bool} monitoringConfigChanged = {\cf17 false};\par
00272 \par
00273   {\cf19 if} ( monitoring_time != new_time ) \{\par
00274     monitoringConfigChanged = {\cf17 true};\par
00275   \}\par
00276   monitoring_time = new_time;\par
00277   jsonDocument[{\cf22 "monitoring"}][{\cf22 "time"}] = monitoring_time;\par
00278 \par
00279   {\cf19 if} ( monitoring_distance != new_distance ) \{\par
00280     monitoringConfigChanged = {\cf17 true};\par
00281   \}\par
00282   monitoring_distance = new_distance;\par
00283   jsonDocument[{\cf22 "monitoring"}][{\cf22 "distance"}] = monitoring_distance;\par
00284 \par
00285   {\cf19 if} ( temperature_threshold != new_temperature ) \{\par
00286     monitoringConfigChanged = {\cf17 true};\par
00287   \}\par
00288   temperature_threshold = new_temperature;\par
00289   jsonDocument[{\cf22 "monitoring"}][{\cf22 "temperature"}] = temperature_threshold;\par
00290 \par
00291   {\cf19 if} ( monitoringConfigChanged ) \{\par
00292     MYDEBUG_PRINT({\cf22 "Nouveau temps de surveillance: "});\par
00293     MYDEBUG_PRINT(monitoring_time);\par
00294     MYDEBUG_PRINT({\cf22 " | Nouvelle distance de surveillance: "});\par
00295     MYDEBUG_PRINT(monitoring_distance);\par
00296     MYDEBUG_PRINT({\cf22 " | Nouvelle Temperature Seuil: "});\par
00297     MYDEBUG_PRINTLN(temperature_threshold);\par
00298     InvokeMonitoringConfigChangedCallbacks(monitoring_time, monitoring_distance, temperature_threshold);\par
00299   \}\par
00300 \par
00301 \}\par
00302 \par
00316 {\cf18 void} update_monitoring_config( {\cf18 float} new_time, {\cf18 float} new_distance, {\cf18 float} new_temperature ) \{\par
00317 \par
00318   read_write_file(CONFIG_FILE_PATH, [new_time, new_distance, new_temperature](JsonDocument& jsonDocument, File& jsonFile) \{\par
00319 \par
00320     update_monitoring_config(new_time, new_distance, new_temperature, jsonDocument);\par
00321 \par
00322   \});\par
00323 \par
00324 \}\par
00325 \par
00337 {\cf18 void} update_health_status( HealthStatus new_health_status, JsonDocument& jsonDocument ) \{\par
00338 \par
00339   {\cf18 bool} healthStatusChanged = {\cf17 false};\par
00340 \par
00341   {\cf19 if} ( user_status != new_health_status ) \{\par
00342     healthStatusChanged = {\cf17 true};\par
00343   \}\par
00344   jsonDocument[{\cf22 "status"}] = new_health_status == HEALTHY ? {\cf22 "HEALTHY"} : new_health_status == CONTACT ? {\cf22 "CONTACT"} : {\cf22 "SICK"};\par
00345   user_status = new_health_status;\par
00346 \par
00347   {\cf19 if} ( healthStatusChanged ) \{\par
00348     MYDEBUG_PRINT({\cf22 "Nouveau Status de Sant\'E9: "});\par
00349     MYDEBUG_PRINTLN(user_status == HEALTHY ? {\cf22 "Sain"} : user_status == CONTACT ? {\cf22 "Cas Contact"} : {\cf22 "Malade"});\par
00350     InvokeHealthStatusChangedCallbacks(user_status);\par
00351   \}\par
00352 \par
00353 \}\par
00354 \par
00366 {\cf18 void} update_health_status( HealthStatus new_health_status ) \{\par
00367 \par
00368   read_write_file(CONFIG_FILE_PATH, [new_health_status](JsonDocument& jsonDocument, File& jsonFile) \{\par
00369 \par
00370     update_health_status(new_health_status, jsonDocument);\par
00371 \par
00372   \});\par
00373 \par
00374 \}\par
00375 \par
00376 \par
00385 {\cf18 void} display_file({\cf17 const} {\cf18 char}* fileName) \{\par
00386   read_file(fileName, [](JsonDocument& jsonDocument, File& jsonFile) \{\par
00387     String json_text;\par
00388     serializeJsonPretty(jsonDocument, json_text);\par
00389     MYDEBUG_PRINT({\cf22 "-SPIFFS : Contenu du fichier "});\par
00390     MYDEBUG_PRINT(jsonFile.name());\par
00391     MYDEBUG_PRINTLN({\cf22 " :"});\par
00392     MYDEBUG_PRINTLN(json_text);\par
00393   \});\par
00394 \}\par
00395 \par
00409 {\cf18 void} get_config() \{\par
00410   \par
00411   read_write_file(CONFIG_FILE_PATH, [](JsonDocument& jsonDocument, File& jsonFile) \{\par
00412 \par
00413 \par
00414     {\cf20 // On r\'E9cup\'E8re les donn\'E9es du fichier de configuration et on les stocke dans les variables globales}\par
00415     {\cf20 // Si une donn\'E9e n'est pas pr\'E9sente dans le fichier, on lui attribue une valeur par d\'E9faut}\par
00416 \par
00417 \par
00418     {\cf17 auto} json_name = jsonDocument[{\cf22 "device"}][{\cf22 "name"}];\par
00419     {\cf19 if} ( json_name.isNull() ) \{\par
00420       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de nom de device dans le fichier de configuration"});\par
00421       json_name = {\cf22 "ContactTracer "} + String(random(0xffff), HEX);\par
00422     \}\par
00423 \par
00424     {\cf17 auto} json_password = jsonDocument[{\cf22 "device"}][{\cf22 "password"}];\par
00425     if ( json_password.isNull() ) \{\par
00426       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de mot de passe dans le fichier de configuration"});\par
00427       json_password = DEFAULT_PASSWORD;\par
00428     \}\par
00429 \par
00430     update_device_config(json_name.as<{\cf17 const} {\cf18 char}*>(), json_password.as<{\cf17 const} {\cf18 char}*>(), jsonDocument);\par
00431 \par
00432 \par
00433 \par
00434     {\cf17 auto} json_status = jsonDocument[{\cf22 "status"}];\par
00435     if ( json_status.isNull() || json_status == {\cf22 ""} ) \{\par
00436       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de statut dans le fichier de configuration"});\par
00437       json_status = DEFAULT_USER_STATUS;\par
00438     \}\par
00439 \par
00440     HealthStatus new_health_status = json_status == {\cf22 "HEALTHY"} ? HEALTHY : json_status == {\cf22 "CONTACT"} ? CONTACT : SICK;\par
00441 \par
00442     update_health_status(new_health_status, jsonDocument);\par
00443 \par
00444 \par
00445 \par
00446     {\cf17 auto} json_net_ssid = jsonDocument[{\cf22 "wifi"}][{\cf22 "net_ssid"}];\par
00447     {\cf19 if} ( json_net_ssid.isNull() ) \{\par
00448       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de SSID NET dans le fichier de configuration"});\par
00449       json_net_ssid = DEFAULT_NET_SSID;\par
00450     \}\par
00451 \par
00452     {\cf17 auto} json_net_password = jsonDocument[{\cf22 "wifi"}][{\cf22 "net_password"}];\par
00453     if ( json_net_password.isNull() ) \{\par
00454       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de mot de passe NET dans le fichier de configuration"});\par
00455       json_net_password = DEFAULT_NET_PASSWORD;\par
00456     \}\par
00457 \par
00458     update_network_config(json_net_ssid.as<{\cf17 const} {\cf18 char}*>(), json_net_password.as<{\cf17 const} {\cf18 char}*>(), jsonDocument);\par
00459 \par
00460     \par
00461 \par
00462     {\cf17 auto} json_monitoring_time = jsonDocument[{\cf22 "monitoring"}][{\cf22 "time"}];\par
00463     if ( json_monitoring_time.isNull() ) \{\par
00464       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas d'intervalle de surveillance dans le fichier de configuration"});\par
00465       json_monitoring_time = DEFAULT_MONITORING_TIME;\par
00466     \}\par
00467 \par
00468     {\cf17 auto} json_monitoring_distance = jsonDocument[{\cf22 "monitoring"}][{\cf22 "distance"}];\par
00469     if ( json_monitoring_distance.isNull() ) \{\par
00470       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de distance de surveillance dans le fichier de configuration"});\par
00471       json_monitoring_distance = DEFAULT_MONITORING_DISTANCE;\par
00472     \}\par
00473 \par
00474     {\cf17 auto} json_temperature_threshold = jsonDocument[{\cf22 "monitoring"}][{\cf22 "temperature"}];\par
00475     if ( json_temperature_threshold.isNull() ) \{\par
00476       MYDEBUG_PRINTLN({\cf22 "-SPIFFS : Pas de Seuil de Temperature dans le fichier de configuration"});\par
00477       json_temperature_threshold = DEFAULT_TEMPERATURE_THRESHOLD;\par
00478     \}\par
00479 \par
00480 \par
00481     update_monitoring_config(json_monitoring_time.as<{\cf18 float}>(), json_monitoring_distance.as<{\cf18 float}>(), json_temperature_threshold.as<{\cf18 float}>(), jsonDocument);\par
00482 \par
00483   \});\par
00484 \par
00485 \}\par
00486 \par
00492 {\cf18 void} reset_file({\cf17 const} {\cf18 char}* filePath) \{\par
00493   {\cf19 if} (!SPIFFS.begin({\cf17 true}))\par
00494     {\cf19 return};\par
00495   \par
00496   SPIFFS.remove(filePath);\par
00497 \par
00498   SPIFFS.end();\par
00499 \}\par
00500 \par
00506 {\cf18 void} setupSPIFFS()\{\par
00507 \par
00508   {\cf20 // SPIFFS.format(); /// ------------- Au besoin, pour formatter le syst\'E8me de fichiers}\par
00509 \par
00510   get_config();\par
00511 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTTicker.h\par \pard\plain 
{\tc\tcl2 \v CTTicker.h}
{\xe \v CTTicker.h}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Ticker.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ticker {\b myTicker}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v myTicker\:CTTicker.h}
{\xe \v CTTicker.h\:myTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ticker myTicker}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 13} du fichier {\b CTTicker.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTTicker.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00009 {\cf21 #pragma once}\par
00010 \par
00011 {\cf21 #include <Ticker.h>}\par
00012 \par
00013 Ticker myTicker;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTWebServer.h\par \pard\plain 
{\tc\tcl2 \v CTWebServer.h}
{\xe \v CTWebServer.h}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WiFi.h"}\par
{\f2 #include "AsyncTCP.h"}\par
{\f2 #include "ESPAsyncWebServer.h"}\par
{\f2 #include "CTSpiffs.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AsyncWebServer {\b asyncWebServer} (80)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleConfig} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la page de configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleResetConfigSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de r\'E9initialisation de la configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleResetMonitoringSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de r\'E9initialisation de la surveillance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleMonitoringConfigSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration du syst\'E8me de surveillance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleDeviceConfigSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration des identifiants de la carte. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleNetConfigSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration des identifiants du r\'E9seau WiFi. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleUpdateHealthStateSubmit} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration de l'\'E9tat de sant\'E9 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleScan} (AsyncWebServerRequest *request)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la page de scan des r\'E9seaux WiFi. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupWebServer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loopWebServer} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v asyncWebServer\:CTWebServer.h}
{\xe \v CTWebServer.h\:asyncWebServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AsyncWebServer asyncWebServer (80 )}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v handleConfig\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleConfig (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la page de configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette page permet de configurer les identifiants de la carte, du point d'acc\'E8s r\'E9seau, du syst\'E8me de surveillance, de r\'E9initialiser la configuration et de renseigner son \'E9tat de sant\'E9 \par
}}}{
D\'E9finition \'E0 la ligne {\b 25} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleDeviceConfigSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleDeviceConfigSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleDeviceConfigSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration des identifiants de la carte. }}\par
{
D\'E9finition \'E0 la ligne {\b 210} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleMonitoringConfigSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleMonitoringConfigSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleMonitoringConfigSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration du syst\'E8me de surveillance. }}\par
{
D\'E9finition \'E0 la ligne {\b 195} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleNetConfigSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleNetConfigSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleNetConfigSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration des identifiants du r\'E9seau WiFi. }}\par
{
D\'E9finition \'E0 la ligne {\b 226} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleResetConfigSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleResetConfigSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleResetConfigSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de r\'E9initialisation de la configuration. }}\par
{
D\'E9finition \'E0 la ligne {\b 173} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleResetMonitoringSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleResetMonitoringSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleResetMonitoringSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de r\'E9initialisation de la surveillance. }}\par
{
D\'E9finition \'E0 la ligne {\b 184} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleScan\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleScan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleScan (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la page de scan des r\'E9seaux WiFi. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Remarques\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cette fonction est appel\'E9e \'E0 chaque rafraichissement de la page\\ lorsqu'on clique sur le SSID du r\'E9seau WiFi auquel on souhaite se connecter, on est redirig\'E9 vers la page de configuration du r\'E9seau WiFi avec le SSID pr\'E9-rempli \par
}}}{
D\'E9finition \'E0 la ligne {\b 257} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v handleUpdateHealthStateSubmit\:CTWebServer.h}
{\xe \v CTWebServer.h\:handleUpdateHealthStateSubmit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleUpdateHealthStateSubmit (AsyncWebServerRequest *  {\i request})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Traitement de la demande de configuration de l'\'E9tat de sant\'E9 }}\par
{
D\'E9finition \'E0 la ligne {\b 241} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v loopWebServer\:CTWebServer.h}
{\xe \v CTWebServer.h\:loopWebServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loopWebServer (void )}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 341} du fichier {\b CTWebServer.h}.}\par
}
{\xe \v setupWebServer\:CTWebServer.h}
{\xe \v CTWebServer.h\:setupWebServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupWebServer ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration du serveur web{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D\'E9finition des routes\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D\'E9marrage du serveur \par}
}{
D\'E9finition \'E0 la ligne {\b 317} du fichier {\b CTWebServer.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTWebServer.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf21 #pragma once}\par
00011 \par
00012 {\cf21 #include "WiFi.h"}\par
00013 {\cf21 #include "AsyncTCP.h"}\par
00014 {\cf21 #include "ESPAsyncWebServer.h"}\par
00015 {\cf21 #include "CTSpiffs.h"}\par
00016 \par
00017 \par
00018 AsyncWebServer asyncWebServer(80);\par
00019 \par
00025 {\cf18 void} handleConfig(AsyncWebServerRequest *request) \{\par
00026 \par
00027   String htmlPage;\par
00028   htmlPage.reserve(1024);               {\cf20 // prevent ram fragmentation}\par
00029 \par
00030   {\cf20 // get_config();}\par
00031 \par
00032 \par
00033   htmlPage = F(\par
00034     {\cf22 "<!DOCTYPE HTML>"}\par
00035     {\cf22 "<html lang='fr'>"}\par
00036 \par
00037       {\cf22 "<head>"}\par
00038         {\cf22 "<meta charset='UTF-8'>"}\par
00039       {\cf22 "</head>"}\par
00040 \par
00041       {\cf22 "<body>"}\par
00042         {\cf22 "<h2>"}\par
00043           {\cf22 "Configuration de la carte : "}\par
00044         {\cf22 "</h2>"}\par
00045         {\cf22 "<form action='/resetConfigSubmit' method='POST'>"}\par
00046           {\cf22 "<input type='submit' value='R\'E9initialiser la Configuration'>"}\par
00047         {\cf22 "</form>"}\par
00048         {\cf22 "<form action='/deviceConfigSubmit' method='POST'>"}\par
00049           {\cf22 "<h3>Identifiants de la Carte</h3>"}\par
00050           {\cf22 "<input type='text' name='name' placeholder='Nom de la carte' value='\{DEVICE_NAME\}'>"}\par
00051           {\cf22 "<input type='text' name='password' placeholder='Password de la carte' value='\{DEVICE_PASSWORD\}'>"}\par
00052           {\cf22 "<input type='submit' value='Enregistrer'>"}\par
00053         {\cf22 "</form>"}\par
00054         {\cf22 "<form action='/netConfigSubmit' method='POST'>"}\par
00055           {\cf22 "<h3>Identifiants du r\'E9seau WiFi</h3>"}\par
00056           {\cf22 "<input type='text' name='ssid' placeholder='SSID du r\'E9seau WiFi' value='\{AP_SSID\}'>"}\par
00057           {\cf22 "<input type='text' name='password' placeholder='Password du r\'E9seau WiFi' value='\{AP_PASSWORD\}'>"}\par
00058           {\cf22 "<input type='submit' value='Se Connecter'>"}\par
00059         {\cf22 "</form>"}\par
00060         {\cf22 "<form action='/monitoringConfigSubmit' method='POST'>"}\par
00061           {\cf22 "<h3>Param\'E8tres de Surveillance</h3>"}\par
00062           {\cf22 "<input type='number' step='any' min='0' name='time' placeholder='P\'E9riode de surveillance' value='\{MONITORING_TIME\}'>"}\par
00063           {\cf22 "<label for='time'>Dur\'E9e de Surveillance Minimum (en minutes)</label>"}\par
00064           {\cf22 "<br>"}\par
00065           {\cf22 "<input type='number' step='any' min='0' name='distance' placeholder='Distance de d\'E9tection' value='\{MONITORING_DISTANCE\}'>"}\par
00066           {\cf22 "<label for='distance'>Distance de Surveillance Maximum (en m\'E8tres)</label>"}\par
00067           {\cf22 "<br>"}\par
00068           {\cf22 "<input type='number' step='any' min='0' name='temperature' placeholder='Temperature Seuil de Maladie' value='\{TEMPERATURE_THRESHOLD\}'>"}\par
00069           {\cf22 "<label for='temperature'>Temperature Seuil de Maladie (en \'B0C)</label>"}\par
00070           {\cf22 "<br>"}\par
00071           {\cf22 "<input type='submit' value='Enregistrer'>"}\par
00072         {\cf22 "</form>"}\par
00073         {\cf22 "<form action='/updateHealthStateSubmit' method='POST'>"}\par
00074           {\cf22 "<h3>\'C9tat de Sant\'E9</h3>"}\par
00075           {\cf22 "<input type='radio' id='HEALTHY' name='healthState' value='2'>"}\par
00076           {\cf22 "<label for='2'>Sain</label>"}\par
00077           {\cf22 "<br>"}\par
00078           {\cf22 "<input type='radio' id='CONTACT' name='healthState' value='1'>"}\par
00079           {\cf22 "<label for='1'>Cas Contact</label>"}\par
00080           {\cf22 "<br>"}\par
00081           {\cf22 "<input type='radio' id='SICK' name='healthState' value='0'>"}\par
00082           {\cf22 "<label for='0'>Malade</label>"}\par
00083           {\cf22 "<br>"}\par
00084           {\cf22 "<input type='submit' value='Enregistrer'>"}\par
00085         {\cf22 "</form>"}\par
00086         {\cf22 "<br>"}\par
00087         {\cf22 "<div>"}\par
00088           {\cf22 "<h3>Contact Tracer Contact\'E9s</h3>"}\par
00089           {\cf22 "<table>"}\par
00090             {\cf22 "\{MONITORED_DEVICES\}"}\par
00091           {\cf22 "</table>"}\par
00092           {\cf22 "<form action='/resetMonitoringSubmit' method='POST'>"}\par
00093             {\cf22 "<input type='submit' value='R\'E9initialiser la Surveillance'>"}\par
00094           {\cf22 "</form>"}\par
00095           {\cf22 "</div>"}\par
00096       {\cf22 "</body>"}\par
00097       \par
00098     {\cf22 "</html>"}\par
00099     {\cf22 "\\r\\n"}\par
00100   );\par
00101 \par
00102   {\cf19 switch} (user_status) \{\par
00103     {\cf19 default}:\par
00104     {\cf19 case} HEALTHY:\par
00105       htmlPage.replace({\cf22 "value='2'"}, {\cf22 "value='2' checked"});\par
00106       {\cf19 break};\par
00107     {\cf19 case} CONTACT:\par
00108       htmlPage.replace({\cf22 "value='1'"}, {\cf22 "value='1' checked"});\par
00109       {\cf19 break};\par
00110     {\cf19 case} SICK:\par
00111       htmlPage.replace({\cf22 "value='0'"}, {\cf22 "value='0' checked"});\par
00112       {\cf19 break};\par
00113   \}\par
00114 \par
00115   String input_net_ssid = request->hasArg({\cf22 "net_ssid"}) ? request->arg({\cf22 "net_ssid"}) : net_ssid;\par
00116 \par
00117   htmlPage.replace({\cf22 "\{DEVICE_NAME\}"}, device_name);\par
00118   htmlPage.replace({\cf22 "\{DEVICE_PASSWORD\}"}, device_password);\par
00119   htmlPage.replace({\cf22 "\{AP_SSID\}"}, input_net_ssid);\par
00120   htmlPage.replace({\cf22 "\{AP_PASSWORD\}"}, net_password);\par
00121   htmlPage.replace({\cf22 "\{MONITORING_TIME\}"}, String(monitoring_time));\par
00122   htmlPage.replace({\cf22 "\{MONITORING_DISTANCE\}"}, String(monitoring_distance));\par
00123   htmlPage.replace({\cf22 "\{TEMPERATURE_THRESHOLD\}"}, String(temperature_threshold));\par
00124 \par
00125 \par
00126   String devices = F(\par
00127     {\cf22 "<tr>"}\par
00128       {\cf22 "<td>Addresse</td>"}\par
00129       {\cf22 "<td>Nom</td>"}\par
00130       {\cf22 "<td>Temps D'exposition</td>"}\par
00131       {\cf22 "<td>Surveill\'E9 de Pr\'E8s</td>"}\par
00132       {\cf22 "<td>Sant\'E9</td>"}\par
00133     {\cf22 "</tr>"}\par
00134   );\par
00135   \par
00136   read_file(MONITORING_FILE_PATH, [&devices](JsonDocument& monitoringDocument, File& monitoringFile) \{\par
00137 \par
00138     JsonObject monitoredDevices = monitoringDocument.as<JsonObject>();\par
00139 \par
00140 \par
00141     {\cf19 for} (JsonPair keyValue : monitoredDevices) \{\par
00142       {\cf17 auto} monitoredAddress = keyValue.key();\par
00143       {\cf17 auto} monitoredDevice = keyValue.value();\par
00144 \par
00145       String device = F(\par
00146         {\cf22 "<tr>"}\par
00147           {\cf22 "<td>\{ADDRESS\}</td>"}\par
00148           {\cf22 "<td>\{NAME\}</td>"}\par
00149           {\cf22 "<td>\{TOTAL_EXPOSURE\}</td>"}\par
00150           {\cf22 "<td>\{CLOSE_MONITORING\}</td>"}\par
00151           {\cf22 "<td>\{HEALTH_STATE\}</td>"}\par
00152         {\cf22 "</tr>"}\par
00153       );\par
00154       device.replace({\cf22 "\{ADDRESS\}"}, monitoredAddress.c_str());\par
00155       device.replace({\cf22 "\{NAME\}"}, monitoredDevice[{\cf22 "name"}].as<String>().c_str());\par
00156       device.replace({\cf22 "\{TOTAL_EXPOSURE\}"}, monitoredDevice[{\cf22 "total_exposure"}].as<String>().c_str());\par
00157       device.replace({\cf22 "\{CLOSE_MONITORING\}"}, monitoredDevice[{\cf22 "close_monitoring"}].as<String>().c_str());\par
00158       device.replace({\cf22 "\{HEALTH_STATE\}"}, monitoredDevice[{\cf22 "status"}].as<String>().c_str());\par
00159 \par
00160       devices += device;\par
00161     \}\par
00162   \});\par
00163   htmlPage.replace({\cf22 "\{MONITORED_DEVICES\}"}, devices);\par
00164   \par
00165 \par
00166   request->send(200, {\cf22 "text/html"}, htmlPage);\par
00167 \par
00168 \}\par
00169 \par
00173 {\cf18 void} handleResetConfigSubmit(AsyncWebServerRequest *request) \{\par
00174   reset_file(CONFIG_FILE_PATH);\par
00175   \par
00176   get_config();\par
00177 \par
00178   request->redirect({\cf22 "/"});\par
00179 \}\par
00180 \par
00184 {\cf18 void} handleResetMonitoringSubmit(AsyncWebServerRequest *request) \{\par
00185   reset_file(MONITORING_FILE_PATH);\par
00186   \par
00187   get_config();\par
00188   \par
00189   request->redirect({\cf22 "/"});\par
00190 \}\par
00191 \par
00195 {\cf18 void} handleMonitoringConfigSubmit(AsyncWebServerRequest *request) \{\par
00196 \par
00197   {\cf20 // On r\'E9cup\'E8re les param\'E8tres de la requ\'EAte}\par
00198   {\cf18 float} time = atof(request->arg({\cf22 "time"}).c_str());\par
00199   {\cf18 float} distance = atof(request->arg({\cf22 "distance"}).c_str());\par
00200   {\cf18 float} temperature = atof(request->arg({\cf22 "temperature"}).c_str());\par
00201 \par
00202   update_monitoring_config(time, distance, temperature);\par
00203 \par
00204   request->redirect({\cf22 "/"});\par
00205 \}\par
00206 \par
00210 {\cf18 void} handleDeviceConfigSubmit(AsyncWebServerRequest *request) \{\par
00211 \par
00212   {\cf20 // On r\'E9cup\'E8re les param\'E8tres de la requ\'EAte}\par
00213   String name = request->arg({\cf22 "name"});\par
00214   String password = request->arg({\cf22 "password"});\par
00215 \par
00216   update_device_config(name.c_str(), password.c_str());\par
00217   {\cf20 // launch_access_point(name.c_str(), password.c_str());}\par
00218 \par
00219 \par
00220   request->redirect({\cf22 "/"});\par
00221 \}\par
00222 \par
00226 {\cf18 void} handleNetConfigSubmit(AsyncWebServerRequest *request) \{\par
00227 \par
00228   {\cf20 // On r\'E9cup\'E8re les param\'E8tres de la requ\'EAte}\par
00229   String ssid = request->arg({\cf22 "ssid"});\par
00230   String password = request->arg({\cf22 "password"});\par
00231 \par
00232   update_network_config(ssid.c_str(), password.c_str());\par
00233   {\cf20 // try_WiFi_connect(ssid.c_str(), password.c_str());}\par
00234   \par
00235   request->redirect({\cf22 "/"});\par
00236 \}\par
00237 \par
00241 {\cf18 void} handleUpdateHealthStateSubmit(AsyncWebServerRequest *request) \{\par
00242 \par
00243   {\cf20 // On r\'E9cup\'E8re les param\'E8tres de la requ\'EAte}\par
00244   String value = request->arg({\cf22 "healthState"});\par
00245   {\cf18 int} intValue = value.toInt();\par
00246 \par
00247   update_health_status((HealthStatus)intValue);\par
00248   request->redirect({\cf22 "/"});\par
00249 \}\par
00250 \par
00257 {\cf18 void} handleScan(AsyncWebServerRequest *request) \{\par
00258   \par
00259   MYDEBUG_PRINTLN({\cf22 "-WEBSERVER : requete scan"});\par
00260 \par
00261   {\cf20 // La carte scanne les r\'E9seaux WiFi \'E0 proximit\'E9}\par
00262   {\cf18 int} n = WiFi.scanNetworks();\par
00263 \par
00264   {\cf20 // Construction de la page HTML de r\'E9ponse}\par
00265   String out = F(\par
00266     {\cf22 "<!DOCTYPE HTML>"}\par
00267     {\cf22 "<html>"}\par
00268       {\cf22 "<head>"}\par
00269         {\cf22 "<meta http-equiv='refresh' content='5'/>"}\par
00270         {\cf22 "<title>Ynov - Projet IoT B2</title>"}\par
00271         {\cf22 "<style>"}\par
00272           {\cf22 "body \{ background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; \}"}\par
00273         {\cf22 "</style>"}\par
00274       {\cf22 "</head>"}\par
00275       {\cf22 "<body>"}\par
00276         {\cf22 "<h1>"}\par
00277           {\cf22 "Page de Scan"}\par
00278         {\cf22 "</h1>"}\par
00279         {\cf22 "<br>"}\par
00280         {\cf22 "<ul>"}\par
00281           {\cf22 "\{NETWORKS\}"}\par
00282         {\cf22 "</ul>"}\par
00283       {\cf22 "</body>"}\par
00284     {\cf22 "</html>"}\par
00285     {\cf22 "\\r\\n"}\par
00286   );\par
00287 \par
00288   {\cf20 // Int\'E9gration des r\'E9seaux WiFi trouv\'E9s dans la page HTML}\par
00289   String networks = {\cf22 ""};\par
00290   {\cf19 if} (n == 0) \{\par
00291     networks = {\cf22 "- AUCUN r\'E9seau WiFi trouv\'E9 -"};\par
00292   \} {\cf19 else} \{\par
00293     {\cf19 for} ({\cf18 int} i = 0; i < n; ++i) \{\par
00294       String ssid = WiFi.SSID(i);\par
00295       String network = F(\par
00296         {\cf22 "<li>"}\par
00297           {\cf22 "<a href='?net_ssid=\{SSID\}&net_password='>\{SSID\}</a>"}\par
00298         {\cf22 "</li>"}\par
00299       );\par
00300       network.replace({\cf22 "\{SSID\}"}, ssid);\par
00301 \par
00302       networks += network;\par
00303     \}\par
00304   \}\par
00305 \par
00306   out.replace({\cf22 "\{NETWORKS\}"}, networks);\par
00307 \par
00308   request->send(200, {\cf22 "text/html"}, out);\par
00309 \}\par
00310 \par
00311 \par
00317 {\cf18 void} setupWebServer()\{\par
00318 \par
00319   MYDEBUG_PRINTLN({\cf22 "-WEBSERVER : D\'E9marrage"});\par
00320 \par
00321   {\cf20 // Configuration de mon serveur web}\par
00322   asyncWebServer.on({\cf22 "/"}, HTTP_GET, [](AsyncWebServerRequest *request) \{\par
00323     request->redirect({\cf22 "config"});\par
00324   \});\par
00325   asyncWebServer.on({\cf22 "/config"}, HTTP_GET, handleConfig);\par
00326   asyncWebServer.on({\cf22 "/resetConfigSubmit"}, HTTP_POST, handleResetConfigSubmit);\par
00327   asyncWebServer.on({\cf22 "/resetMonitoringSubmit"}, HTTP_POST, handleResetMonitoringSubmit);\par
00328   asyncWebServer.on({\cf22 "/deviceConfigSubmit"}, HTTP_POST, handleDeviceConfigSubmit);\par
00329   asyncWebServer.on({\cf22 "/monitoringConfigSubmit"}, HTTP_POST, handleMonitoringConfigSubmit);\par
00330   asyncWebServer.on({\cf22 "/netConfigSubmit"}, HTTP_POST, handleNetConfigSubmit);\par
00331   asyncWebServer.on({\cf22 "/updateHealthStateSubmit"}, HTTP_POST, handleUpdateHealthStateSubmit);\par
00332   asyncWebServer.on({\cf22 "/scan"}, HTTP_GET, handleScan);\par
00333   asyncWebServer.onNotFound([](AsyncWebServerRequest *request) \{\par
00334     request->redirect({\cf22 "/"});\par
00335   \});\par
00336 \par
00337   asyncWebServer.begin();\par
00338 \}\par
00339 \par
00340 \par
00341 {\cf18 void} loopWebServer({\cf18 void}) \{\par
00342 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier CTWiFi.h\par \pard\plain 
{\tc\tcl2 \v CTWiFi.h}
{\xe \v CTWiFi.h}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WiFi.h>}\par
{\f2 #include <Ticker.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b launch_access_point} (const char *ssid, const char *password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
launch_acces_point permet de cr\'E9er un point d'acc\'E9s de la carte esp pour permettre de la detecter sur le r\'E9seaux (Hamburger) et d'interagir avec cette derni\'E8re \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_AP_state} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie l'\'E9tat du point d'acc\'E8s r\'E9seau du Contact Tracer; si il n'est pas d\'E9marr\'E9, il le d\'E9marre.\par
 Pour ceci, on utilise {\b ap_launched}. En cons\'E9quence, on peut changer la valeur de {\b ap_launched} pour forcer un red\'E9marrage de l'Access Point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b connect_WiFi_network} (const char *ssid, const char *password, uint cycles=50)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
connect_Wifi_network est une fonction qui sert \'E0 se connecter au Access point "Hamburger" avec l'esp }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_WiFi_connection} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie l'\'E9tat du Point d'acc\'E8s r\'E9seau du Contact Tracer; si il n'est pas connect\'E9, il tente de se connecter.\par
. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b try_WiFi_connect} (const char *ssid, const char *password)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tente de se connecter au r\'E9seau WiFi avec les identifiants fournis en param\'E8tre.\par
Si la connexion \'E9choue, le Contact Tracer se reconnecte au r\'E9seau WiFi configur\'E9 dans le fichier de configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WiFiTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupWiFi} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ap_launched} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v check_AP_state\:CTWiFi.h}
{\xe \v CTWiFi.h\:check_AP_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_AP_state ()}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie l'\'E9tat du point d'acc\'E8s r\'E9seau du Contact Tracer; si il n'est pas d\'E9marr\'E9, il le d\'E9marre.\par
 Pour ceci, on utilise {\b ap_launched}. En cons\'E9quence, on peut changer la valeur de {\b ap_launched} pour forcer un red\'E9marrage de l'Access Point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true lorsque le Point d'acc\'E8s est d\'E9j\'E0 d\'E9marr\'E9 et ne red\'E9marre donc pas. \par
false lorsque le Point d'acc\'E8s n'est pas d\'E9marr\'E9 et par cons\'E9quent, d\'E9marre. \par
}}}{
D\'E9finition \'E0 la ligne {\b 52} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v check_WiFi_connection\:CTWiFi.h}
{\xe \v CTWiFi.h\:check_WiFi_connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_WiFi_connection ()}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E9rifie l'\'E9tat du Point d'acc\'E8s r\'E9seau du Contact Tracer; si il n'est pas connect\'E9, il tente de se connecter.\par
. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true lorsque le Contact Tracer est d\'E9j\'E0 connect\'E9 au Point d'acc\'E8s et ne fait donc rien. \par
false lorsque le Contact Tracer n'a pas r\'E9ussi \'E0 se connecter. \par
}}}{
D\'E9finition \'E0 la ligne {\b 110} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v connect_WiFi_network\:CTWiFi.h}
{\xe \v CTWiFi.h\:connect_WiFi_network}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool connect_WiFi_network (const char *  {\i ssid}, const char *  {\i password}, uint  {\i cycles} = {\f2 50})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
connect_Wifi_network est une fonction qui sert \'E0 se connecter au Access point "Hamburger" avec l'esp }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ssid} \cell }{id de connexion \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{mot de passe de l'ap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{nombres de tentatives de check de la connexion\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true lorsque la connexion est r\'E9ussie \par
false lorsque la connexion est \'E9chou\'E9e \par
}}}{
D\'E9finition \'E0 la ligne {\b 77} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v launch_access_point\:CTWiFi.h}
{\xe \v CTWiFi.h\:launch_access_point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void launch_access_point (const char *  {\i ssid}, const char *  {\i password})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
launch_acces_point permet de cr\'E9er un point d'acc\'E9s de la carte esp pour permettre de la detecter sur le r\'E9seaux (Hamburger) et d'interagir avec cette derni\'E8re \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ssid} \cell }{Nom du point d'acc\'E9s de l'esp \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{Mot de passe de ce dernier \cell }
{\row }
}
}{
D\'E9finition \'E0 la ligne {\b 26} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v setupWiFi\:CTWiFi.h}
{\xe \v CTWiFi.h\:setupWiFi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setupWiFi ()}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration du wifi de l'esp{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mode AP + Station\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Connexion au r\'E9seau \par}
}{
D\'E9finition \'E0 la ligne {\b 160} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v try_WiFi_connect\:CTWiFi.h}
{\xe \v CTWiFi.h\:try_WiFi_connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool try_WiFi_connect (const char *  {\i ssid}, const char *  {\i password})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tente de se connecter au r\'E9seau WiFi avec les identifiants fournis en param\'E8tre.\par
Si la connexion \'E9choue, le Contact Tracer se reconnecte au r\'E9seau WiFi configur\'E9 dans le fichier de configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Param\'E8tres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ssid} \cell }{Le nom du r\'E9seau WiFi \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{Le mot de passe du r\'E9seau WiFi\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true lorsque la connexion est r\'E9ussie\par
false lorsque la connexion est \'E9chou\'E9e \par
}}}{
D\'E9finition \'E0 la ligne {\b 133} du fichier {\b CTWiFi.h}.}\par
}
{\xe \v WiFiTicker\:CTWiFi.h}
{\xe \v CTWiFi.h\:WiFiTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiTicker ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 151} du fichier {\b CTWiFi.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v ap_launched\:CTWiFi.h}
{\xe \v CTWiFi.h\:ap_launched}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ap_launched = false}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
D\'E9finition \'E0 la ligne {\b 17} du fichier {\b CTWiFi.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CTWiFi.h\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Aller \'E0 la documentation de ce fichier.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 {\cf21 #pragma once}\par
00012 \par
00013 {\cf21 #include <WiFi.h>}\par
00014 {\cf21 #include <Ticker.h>}\par
00015 \par
00016 \par
00017 {\cf18 bool} ap_launched = {\cf17 false};\par
00018 \par
00019 \par
00026 {\cf18 void} launch_access_point({\cf17 const} {\cf18 char}* ssid, {\cf17 const} {\cf18 char}* password) \{\par
00027   WiFi.softAPdisconnect({\cf17 true});\par
00028   WiFi.softAP(ssid, password);\par
00029 \par
00030   ap_launched = {\cf17 true};\par
00031 \par
00032   {\cf20 // update_device_config(ssid, password);}\par
00033   \par
00034   MYDEBUG_PRINTLN({\cf22 "-WIFI AP : Access Point D\'E9marr\'E9"});\par
00035   MYDEBUG_PRINTF({\cf22 "-WIFI AP : Connectez-vous \'E0 %s et ouvrez %s dans un navigateur web\\n"}, device_name.c_str(), WiFi.softAPIP().toString().c_str());\par
00036   {\cf19 if} ( WiFi.status() == WL_CONNECTED ) \{\par
00037     MYDEBUG_PRINTF({\cf22 "-WIFI AP : ou connectez-vous \'E0 %s et ouvrez %s\\n"}, net_ssid.c_str(), WiFi.localIP().toString().c_str());\par
00038   \}\par
00039 \}\par
00040 \par
00041 \par
00052 {\cf18 bool} check_AP_state() \{\par
00053   {\cf19 if} (ap_launched) \{\par
00054     {\cf19 return} {\cf17 true};\par
00055   \}\par
00056 \par
00057   {\cf20 // get_config();}\par
00058 \par
00059   launch_access_point(device_name.c_str(), device_password.c_str());\par
00060   {\cf19 return} {\cf17 false};\par
00061 \}\par
00062 \par
00063 \par
00064 \par
00077 {\cf18 bool} connect_WiFi_network({\cf17 const} {\cf18 char}* ssid, {\cf17 const} {\cf18 char}* password, uint cycles = 50) \{\par
00078   WiFi.disconnect({\cf17 true});\par
00079   WiFi.begin(ssid, password);\par
00080   \par
00081   MYDEBUG_PRINT({\cf22 "-WIFI : Connexion au r\'E9seau : "});\par
00082   MYDEBUG_PRINT(ssid);\par
00083 \par
00084   {\cf19 for} ({\cf18 int} i = 0; i < cycles; i++) \{\par
00085     {\cf19 if} (WiFi.status() == WL_CONNECTED) \{\par
00086 \par
00087       MYDEBUG_PRINT({\cf22 "\\n-WIFI : R\'E9ussite, connect\'E9 \'E0 "});\par
00088       MYDEBUG_PRINTLN(ssid);\par
00089 \par
00090       {\cf20 // update_network_config(ssid, password);}\par
00091       check_AP_state();\par
00092       \par
00093       {\cf19 return} {\cf17 true};\par
00094     \}\par
00095     MYDEBUG_PRINT({\cf22 "."});\par
00096     delay(100);\par
00097   \}\par
00098   MYDEBUG_PRINTLN({\cf22 "\\n-WIFI : Connexion \'E9chou\'E9e"});\par
00099   {\cf19 return} {\cf17 false};\par
00100 \}\par
00101 \par
00110 {\cf18 bool} check_WiFi_connection() \{\par
00111   {\cf19 if} (WiFi.status() == WL_CONNECTED) \{\par
00112     {\cf19 return} {\cf17 true};\par
00113   \}\par
00114 \par
00115   {\cf20 // get_config();}\par
00116 \par
00117   {\cf19 return} connect_WiFi_network(net_ssid.c_str(), net_password.c_str());\par
00118 \}\par
00119 \par
00133 {\cf18 bool} try_WiFi_connect({\cf17 const} {\cf18 char}* ssid, {\cf17 const} {\cf18 char}* password) \{\par
00134   \par
00135   {\cf18 bool} connectionSuccess = connect_WiFi_network(ssid, password, 20);\par
00136 \par
00137   {\cf19 if} ( !connectionSuccess ) \{\par
00138 \par
00139     MYDEBUG_PRINT({\cf22 "-WIFI : connect\'E9 \'E0 "});\par
00140     MYDEBUG_PRINTLN(net_ssid);\par
00141 \par
00142     WiFi.disconnect({\cf17 true});\par
00143     WiFi.begin(net_ssid, net_password);\par
00144 \par
00145     {\cf19 return} {\cf17 false};\par
00146   \}\par
00147   \par
00148   {\cf19 return} {\cf17 true};\par
00149 \}\par
00150 \par
00151 {\cf18 void} WiFiTicker() \{\par
00152   check_WiFi_connection();\par
00153 \}\par
00154 \par
00160 {\cf18 void} setupWiFi() \{\par
00161   MYDEBUG_PRINTLN({\cf22 "-WIFI : Configuration "});\par
00162 \par
00163   {\cf20 // Configuration de la carte en mode Access Point ET Station}\par
00164   WiFi.mode(WIFI_AP_STA);\par
00165 \par
00166   {\cf20 // launch_access_point(device_name.c_str(), device_password.c_str());}\par
00167   connect_WiFi_network(net_ssid.c_str(), net_password.c_str());\par
00168 \par
00169   AddNetworkCredentialsChangedCallback([]({\cf17 const} {\cf18 char}* ssid, {\cf17 const} {\cf18 char}* password) \{\par
00170     MYDEBUG_PRINTLN({\cf22 "-WIFI NET : Nouveaux identifiants de connexion re\'E7us"});\par
00171     try_WiFi_connect(net_ssid.c_str(), net_password.c_str());\par
00172   \});\par
00173   AddDeviceCredentialsChangedCallback([]({\cf17 const} {\cf18 char}* ssid, {\cf17 const} {\cf18 char}* password) \{\par
00174     MYDEBUG_PRINTLN({\cf22 "-WIFI AP : Nouveaux identifiants re\'E7us"});\par
00175     launch_access_point(device_name.c_str(), device_password.c_str());\par
00176   \});\par
00177 \par
00178   myTicker.attach(20, WiFiTicker);\par
00179 \par
00180 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
R\'E9f\'E9rence du fichier mainpage.md\par \pard\plain 
{\tc\tcl2 \v mainpage.md}
{\xe \v mainpage.md}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
